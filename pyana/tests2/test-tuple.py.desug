(program
 (define break (void))
 (define return (void))
 (define continue (void))
 (define $current-handler (void))
 (define gbl-dict (void))
 (define object (void))
 (define List (void))
 (define set (void))
 (define tuple (void))
 (define len (void))
 (define g$b (void))
 (define g$t (void))
 (define g$y (void))
 (define g$u (void))
 (define g$a (void))
 (define g$z (void))
 (define g$x (void))
 (begin
   (set! len
     (lambda (seq22)
       (call/ec
        (lambda (return)
          (let ((cnt23 0))
            (begin
              (if (let ((t11 (py-list? seq22)))
                    (begin
                      (if t11
                        t11
                        (let ((t12 (set? seq22)))
                          (begin (if t12 t12 (tuple? seq22)))))))
                (let ((container24 (dict-ref seq22 "__containerdict__")))
                  (begin
                    (call/ec
                     (lambda (break)
                       ((lambda ($seq13 $loop14)
                          (begin
                            (begin (for-container $seq13 $loop14) (void))))
                        container24
                        (lambda (entry25)
                          (call/ec
                           (lambda (continue) (set! cnt23 (+ 1 cnt23))))))))
                    (return cnt23)))
                (cond
                 (else
                  (call/ec
                   (lambda (break)
                     ((lambda ($seq15 $loop16)
                        (begin (begin (for-container $seq15 $loop16) (void))))
                      seq22
                      (lambda (entry25)
                        (call/ec
                         (lambda (continue) (set! cnt23 (+ cnt23 1))))))))
                  (return cnt23))))))))))
   (set! object (lambda () (void)))
   (set! List
     (lambda (tmp-dict27)
       (call/ec
        (lambda (return)
          (let (($localo28
                 (dict ("__class__" List) ("__type__" "instPyList"))))
            (begin
              ((get-field $localo28 "__init__") tmp-dict27)
              (return $localo28)))))))
   (set! set
     (lambda (tmp-dict30)
       (call/ec
        (lambda (return)
          (let (($localo31 (dict ("__class__" set) ("__type__" "instSet"))))
            (begin
              ((get-field $localo31 "__init__") tmp-dict30)
              (return $localo31)))))))
   (set! tuple
     (lambda (tmp-dict33)
       (call/ec
        (lambda (return)
          (let (($localo34
                 (dict ("__class__" tuple) ("__type__" "instTuple"))))
            (begin
              ((get-field $localo34 "__init__") tmp-dict33)
              (return $localo34)))))))
   (set! gbl-dict (dict))
   (dict-set!
    gbl-dict
    object
    (dict
     ("__base__" (list))
     ("__mro__" (list object))
     ("__init__" (lambda v void))))
   (dict-set!
    gbl-dict
    List
    (dict
     ("__base__" (list object))
     ("__mro__" (list List object))
     ("__init__"
      (lambda (self35 tmpdict36)
        (call/ec
         (lambda (return)
           (if (py-list? tmpdict36)
             (set-field!
              self35
              "__containerdict__"
              (dict-ref tmpdict36 "__containerdict__"))
             (set-field! self35 "__containerdict__" tmpdict36))))))))
   (dict-set!
    gbl-dict
    set
    (dict
     ("__base__" (list object))
     ("__mro__" (list set object))
     ("__init__"
      (lambda (self37 tmpdict38)
        (call/ec
         (lambda (return)
           (if (py-list? tmpdict38)
             (set-field!
              self37
              "__containerdict__"
              (dict-ref tmpdict38 "__containerdict__"))
             (set-field! self37 "__containerdict__" tmpdict38))))))))
   (dict-set!
    gbl-dict
    tuple
    (dict
     ("__base__" (list object))
     ("__mro__" (list tuple object))
     ("__init__"
      (lambda (self39 tmp-dict40)
        (call/ec
         (lambda (return)
           (if (let ((t17 (py-list? tmp-dict40)))
                 (begin
                   (if t17
                     t17
                     (let ((t18 (tuple? tmp-dict40)))
                       (begin (if t18 t18 (set? tmp-dict40)))))))
             (set-field!
              self39
              "__containerdict__"
              (dict-ref tmp-dict40 "__containerdict__"))
             (set-field! self39 "__containerdict__" tmp-dict40))))))))
   (set! g$t (tuple (dict (0 12345) (1 54321) (2 "hello!"))))
   (py-print
    (let ((e11 g$t))
      (begin
        (let ((i12 0))
          (begin
            (if (py-list? e11)
              (py-list-ref e11 i12)
              (if (tuple? e11)
                (tuple-ref e11 i12)
                (if (dict? e11)
                  (dict-ref e11 i12)
                  (error "cannot index object")))))))))
   (py-print g$t)
   (set! g$u
     (tuple (dict (0 g$t) (1 (tuple (dict (0 1) (1 2) (2 3) (3 4) (4 5)))))))
   (set! g$x
     (let ((e13 g$u))
       (begin
         (let ((i14 0))
           (begin
             (if (py-list? e13)
               (py-list-ref e13 i14)
               (if (tuple? e13)
                 (tuple-ref e13 i14)
                 (if (dict? e13)
                   (dict-ref e13 i14)
                   (error "cannot index object")))))))))
   (set! g$y
     (let ((e15 g$u))
       (begin
         (let ((i16 1))
           (begin
             (if (py-list? e15)
               (py-list-ref e15 i16)
               (if (tuple? e15)
                 (tuple-ref e15 i16)
                 (if (dict? e15)
                   (dict-ref e15 i16)
                   (error "cannot index object")))))))))
   (py-print g$x)
   (py-print g$y)
   (py-print g$u)
   (let ((t17 (tuple (dict (0 (List (dict (0 100) (1 200)))) (1 "hi")))))
     (begin
       (set! g$a
         (let ((e18 t17))
           (begin
             (let ((i19 0))
               (begin
                 (if (py-list? e18)
                   (py-list-ref e18 i19)
                   (if (tuple? e18)
                     (tuple-ref e18 i19)
                     (if (dict? e18)
                       (dict-ref e18 i19)
                       (error "cannot index object")))))))))
       (set! g$b
         (let ((e20 t17))
           (begin
             (let ((i21 1))
               (begin
                 (if (py-list? e20)
                   (py-list-ref e20 i21)
                   (if (tuple? e20)
                     (tuple-ref e20 i21)
                     (if (dict? e20)
                       (dict-ref e20 i21)
                       (error "cannot index object")))))))))))
   (set! g$z g$a)
   (py-print g$z)))
