(program
 (define break (void))
 (define return (void))
 (define continue (void))
 (define $current-handler (void))
 (define gbl-dict (void))
 (define object (void))
 (define List (void))
 (define set (void))
 (define tuple (void))
 (define len (void))
 (define g$A (void))
 (define g$B (void))
 (define g$b (void))
 (define g$var2 (void))
 (define g$C (void))
 (define g$var1 (void))
 (begin
   (set! len
     (lambda (seq14)
       (call/ec
        (lambda (return)
          (let ((cnt15 0))
            (begin
              (if (let ((t11 (py-list? seq14)))
                    (begin
                      (if t11
                        t11
                        (let ((t12 (set? seq14)))
                          (begin (if t12 t12 (tuple? seq14)))))))
                (let ((container16 (dict-ref seq14 "__containerdict__")))
                  (begin
                    (call/ec
                     (lambda (break)
                       ((lambda ($seq13 $loop14)
                          (begin
                            (begin (for-container $seq13 $loop14) (void))))
                        container16
                        (lambda (entry17)
                          (call/ec
                           (lambda (continue) (set! cnt15 (+ 1 cnt15))))))))
                    (return cnt15)))
                (cond
                 (else
                  (call/ec
                   (lambda (break)
                     ((lambda ($seq15 $loop16)
                        (begin (begin (for-container $seq15 $loop16) (void))))
                      seq14
                      (lambda (entry17)
                        (call/ec
                         (lambda (continue) (set! cnt15 (+ cnt15 1))))))))
                  (return cnt15))))))))))
   (set! object (lambda () (void)))
   (set! List
     (lambda (tmp-dict19)
       (call/ec
        (lambda (return)
          (let (($localo20
                 (dict ("__class__" List) ("__type__" "instPyList"))))
            (begin
              ((get-field $localo20 "__init__") tmp-dict19)
              (return $localo20)))))))
   (set! set
     (lambda (tmp-dict22)
       (call/ec
        (lambda (return)
          (let (($localo23 (dict ("__class__" set) ("__type__" "instSet"))))
            (begin
              ((get-field $localo23 "__init__") tmp-dict22)
              (return $localo23)))))))
   (set! tuple
     (lambda (tmp-dict25)
       (call/ec
        (lambda (return)
          (let (($localo26
                 (dict ("__class__" tuple) ("__type__" "instTuple"))))
            (begin
              ((get-field $localo26 "__init__") tmp-dict25)
              (return $localo26)))))))
   (set! gbl-dict (dict))
   (dict-set!
    gbl-dict
    object
    (dict
     ("__base__" (list))
     ("__mro__" (list object))
     ("__init__" (lambda v void))))
   (dict-set!
    gbl-dict
    List
    (dict
     ("__base__" (list object))
     ("__mro__" (list List object))
     ("__init__"
      (lambda (self27 tmpdict28)
        (call/ec
         (lambda (return)
           (if (py-list? tmpdict28)
             (set-field!
              self27
              "__containerdict__"
              (dict-ref tmpdict28 "__containerdict__"))
             (set-field! self27 "__containerdict__" tmpdict28))))))))
   (dict-set!
    gbl-dict
    set
    (dict
     ("__base__" (list object))
     ("__mro__" (list set object))
     ("__init__"
      (lambda (self29 tmpdict30)
        (call/ec
         (lambda (return)
           (if (py-list? tmpdict30)
             (set-field!
              self29
              "__containerdict__"
              (dict-ref tmpdict30 "__containerdict__"))
             (set-field! self29 "__containerdict__" tmpdict30))))))))
   (dict-set!
    gbl-dict
    tuple
    (dict
     ("__base__" (list object))
     ("__mro__" (list tuple object))
     ("__init__"
      (lambda (self31 tmp-dict32)
        (call/ec
         (lambda (return)
           (if (let ((t17 (py-list? tmp-dict32)))
                 (begin
                   (if t17
                     t17
                     (let ((t18 (tuple? tmp-dict32)))
                       (begin (if t18 t18 (set? tmp-dict32)))))))
             (set-field!
              self31
              "__containerdict__"
              (dict-ref tmp-dict32 "__containerdict__"))
             (set-field! self31 "__containerdict__" tmp-dict32))))))))
   ((lambda ()
      (begin
        (set! g$A
          (lambda ()
            (call/ec
             (lambda (return)
               (let (($localo11 (dict ("__class__" g$A) ("__type__" "instA"))))
                 (begin
                   ((get-field $localo11 "__init__"))
                   (return $localo11)))))))
        (dict-set!
         gbl-dict
         g$A
         (dict
          ("__base__" (list object))
          ("__class__" g$A)
          ("__type__" "class")
          ("__init__"
           (lambda (self)
             (call/ec
              (lambda (return)
                (begin
                  (py-print (get-field (get-field self "__class__") "__mro__"))
                  (set-field! self "str" "in A's init"))))))
          ("getStr"
           (lambda (self)
             (call/ec
              (lambda (return) (begin (return (get-field self "str")))))))))
        (dict-set! (dict-ref gbl-dict g$A) "__mro__" (list g$A object)))))
   ((lambda ()
      (begin
        (set! g$C
          (lambda ()
            (call/ec
             (lambda (return)
               (let (($localo12 (dict ("__class__" g$C) ("__type__" "instC"))))
                 (begin
                   ((get-field $localo12 "__init__"))
                   (return $localo12)))))))
        (dict-set!
         gbl-dict
         g$C
         (dict
          ("__base__" (list object))
          ("__class__" g$C)
          ("__type__" "class")
          ("__init__"
           (lambda (self)
             (call/ec
              (lambda (return)
                (begin
                  (py-print (get-field (get-field self "__class__") "__mro__"))
                  (set-field! self "str" "in C's init"))))))))
        (dict-set! (dict-ref gbl-dict g$C) "__mro__" (list g$C object)))))
   ((lambda ()
      (begin
        (set! g$B
          (lambda ()
            (call/ec
             (lambda (return)
               (let ((bb (void)))
                 (begin
                   (let (($localo13
                          (dict ("__class__" g$B) ("__type__" "instB"))))
                     (begin
                       ((get-field $localo13 "__init__"))
                       (return $localo13)))))))))
        (dict-set!
         gbl-dict
         g$B
         (dict
          ("__base__" (list g$C g$A object))
          ("__class__" g$B)
          ("__type__" "class")
          ("bb"
           (lambda (self)
             (call/ec
              (lambda (return) (begin (set-field! self "strNum" 10000))))))))
        (dict-set!
         (dict-ref gbl-dict g$B)
         "__mro__"
         (list g$B g$C g$A object)))))
   (set! g$b (g$B))
   (set! g$var1 ((get-field g$b "getStr")))
   (py-print g$var1)
   ((get-field g$b "bb"))
   (set! g$var2 (get-field g$b "strNum"))
   (py-print g$var2)))
