(program
 (define gbl-dict (void))
 (define object (void))
 (define List (void))
 (define set (void))
 (define tuple (void))
 (define len (void))
 (define A (void))
 (define x (void))
 (define D (void))
 (define B (void))
 (define C (void))
 (set-global!
  len
  (lambda (seq15)
    (call/ec
     (lambda (return)
       (let ((cnt16 0))
         (cond
          ((or (py-list? seq15) (set? seq15) (tuple? seq15))
           (let ((container17 (dict-ref seq15 "__containerdict__")))
             (for-each entry18 container17 (set! cnt16 (+ 1 cnt16)))
             (return cnt16)))
          (else
           (for-each entry18 seq15 (set! cnt16 (+ cnt16 1)))
           (return cnt16))))))))
 (set-global! object (lambda () (void)))
 (set-global!
  List
  (lambda (tmp-dict20)
    (call/ec
     (lambda (return)
       (let (($localo21
              (dict
               ("__class__" (get-global List))
               ("__type__" "instPyList"))))
         ((get-field $localo21 "__init__") tmp-dict20)
         (return $localo21))))))
 (set-global!
  set
  (lambda (tmp-dict23)
    (call/ec
     (lambda (return)
       (let (($localo24
              (dict ("__class__" (get-global set)) ("__type__" "instSet"))))
         ((get-field $localo24 "__init__") tmp-dict23)
         (return $localo24))))))
 (set-global!
  tuple
  (lambda (tmp-dict26)
    (call/ec
     (lambda (return)
       (let (($localo27
              (dict
               ("__class__" (get-global tuple))
               ("__type__" "instTuple"))))
         ((get-field $localo27 "__init__") tmp-dict26)
         (return $localo27))))))
 (set-global! gbl-dict (dict))
 (dict-set!
  gbl-dict
  object
  (dict
   ("__base__" (list))
   ("__mro__" (list object))
   ("__init__" (lambda v void))))
 (dict-set!
  gbl-dict
  List
  (dict
   ("__base__" (list object))
   ("__mro__" (list List object))
   ("__init__"
    (lambda (self28 tmpdict29)
      (call/ec
       (lambda (return)
         (if (py-list? tmpdict29)
           (set-field!
            self28
            "__containerdict__"
            (dict-ref tmpdict29 "__containerdict__"))
           (set-field! self28 "__containerdict__" tmpdict29))))))))
 (dict-set!
  gbl-dict
  set
  (dict
   ("__base__" (list object))
   ("__mro__" (list set object))
   ("__init__"
    (lambda (self30 tmpdict31)
      (call/ec
       (lambda (return)
         (if (py-list? tmpdict31)
           (set-field!
            self30
            "__containerdict__"
            (dict-ref tmpdict31 "__containerdict__"))
           (set-field! self30 "__containerdict__" tmpdict31))))))))
 (dict-set!
  gbl-dict
  tuple
  (dict
   ("__base__" (list object))
   ("__mro__" (list tuple object))
   ("__init__"
    (lambda (self32 tmp-dict33)
      (call/ec
       (lambda (return)
         (if (or (py-list? tmp-dict33) (tuple? tmp-dict33) (set? tmp-dict33))
           (set-field!
            self32
            "__containerdict__"
            (dict-ref tmp-dict33 "__containerdict__"))
           (set-field! self32 "__containerdict__" tmp-dict33))))))))
 ((lambda ()
    (begin
      (set-global!
       A
       (lambda ()
         (call/ec
          (lambda (return)
            (let (($localo11
                   (dict ("__class__" (get-global A)) ("__type__" "instA"))))
              ((get-field $localo11 "__init__"))
              (return $localo11))))))
      (dict-set!
       gbl-dict
       (get-global A)
       (dict
        ("__base__" (list object))
        ("__class__" (get-global A))
        ("__type__" "class")
        ("__init__"
         (lambda (self)
           (call/ec
            (lambda (return)
              (let ((mro_a (void)))
                (py-print "A init")
                (set! mro_a (get-field (get-field self "__class__") "__mro__"))
                (py-print mro_a))))))))
      (dict-set!
       (dict-ref gbl-dict (get-global A))
       "__mro__"
       (list (get-global A) object)))))
 ((lambda ()
    (begin
      (set-global!
       B
       (lambda ()
         (call/ec
          (lambda (return)
            (let (($localo12
                   (dict ("__class__" (get-global B)) ("__type__" "instB"))))
              ((get-field $localo12 "__init__"))
              (return $localo12))))))
      (dict-set!
       gbl-dict
       (get-global B)
       (dict
        ("__base__" (list (get-global A) object))
        ("__class__" (get-global B))
        ("__type__" "class")
        ("__init__"
         (lambda (self)
           (call/ec
            (lambda (return)
              (let ((mro_b (void)))
                (py-print "B init")
                (set! mro_b (get-field (get-field self "__class__") "__mro__"))
                (py-print mro_b)
                ((get-field (super (get-global B) self) "__init__")))))))))
      (dict-set!
       (dict-ref gbl-dict (get-global B))
       "__mro__"
       (list (get-global B) (get-global A) object)))))
 ((lambda ()
    (begin
      (set-global!
       C
       (lambda ()
         (call/ec
          (lambda (return)
            (let (($localo13
                   (dict ("__class__" (get-global C)) ("__type__" "instC"))))
              ((get-field $localo13 "__init__"))
              (return $localo13))))))
      (dict-set!
       gbl-dict
       (get-global C)
       (dict
        ("__base__" (list (get-global A) object))
        ("__class__" (get-global C))
        ("__type__" "class")
        ("__init__"
         (lambda (self)
           (call/ec
            (lambda (return)
              (let ((mro_c (void)))
                (py-print "C init")
                (set! mro_c (get-field (get-field self "__class__") "__mro__"))
                (py-print mro_c)
                ((get-field (super (get-global C) self) "__init__")))))))))
      (dict-set!
       (dict-ref gbl-dict (get-global C))
       "__mro__"
       (list (get-global C) (get-global A) object)))))
 ((lambda ()
    (begin
      (set-global!
       D
       (lambda ()
         (call/ec
          (lambda (return)
            (let (($localo14
                   (dict ("__class__" (get-global D)) ("__type__" "instD"))))
              ((get-field $localo14 "__init__"))
              (return $localo14))))))
      (dict-set!
       gbl-dict
       (get-global D)
       (dict
        ("__base__" (list (get-global B) (get-global C) object))
        ("__class__" (get-global D))
        ("__type__" "class")
        ("__init__"
         (lambda (self)
           (call/ec
            (lambda (return)
              (let ((mro_d (void)))
                (py-print "D init")
                (set! mro_d (get-field (get-field self "__class__") "__mro__"))
                (py-print mro_d)
                ((get-field (super (get-global D) self) "__init__")))))))))
      (dict-set!
       (dict-ref gbl-dict (get-global D))
       "__mro__"
       (list
        (get-global D)
        (get-global B)
        (get-global C)
        (get-global A)
        object)))))
 (set-global! x ((get-global D))))
