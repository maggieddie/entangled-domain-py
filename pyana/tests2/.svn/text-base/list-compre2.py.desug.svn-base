(program
 (define break (void))
 (define return (void))
 (define continue (void))
 (define $current-handler (void))
 (define gbl-dict (void))
 (define object (void))
 (define List (void))
 (define set (void))
 (define tuple (void))
 (define len (void))
 (define g$mat (void))
 (define g$vec1 (void))
 (define g$vec2 (void))
 (begin
   (set! len
     (lambda (seq13)
       (call/ec
        (lambda (return)
          (let ((cnt14 0))
            (begin
              (if (let ((t11 (py-list? seq13)))
                    (begin
                      (if t11
                        t11
                        (let ((t12 (set? seq13)))
                          (begin (if t12 t12 (tuple? seq13)))))))
                (let ((container15 (dict-ref seq13 "__containerdict__")))
                  (begin
                    (call/ec
                     (lambda (break)
                       ((lambda ($seq13 $loop14)
                          (begin
                            (begin (for-container $seq13 $loop14) (void))))
                        container15
                        (lambda (entry16)
                          (call/ec
                           (lambda (continue) (set! cnt14 (+ 1 cnt14))))))))
                    (return cnt14)))
                (cond
                 (else
                  (call/ec
                   (lambda (break)
                     ((lambda ($seq15 $loop16)
                        (begin (begin (for-container $seq15 $loop16) (void))))
                      seq13
                      (lambda (entry16)
                        (call/ec
                         (lambda (continue) (set! cnt14 (+ cnt14 1))))))))
                  (return cnt14))))))))))
   (set! object (lambda () (void)))
   (set! List
     (lambda (tmp-dict18)
       (call/ec
        (lambda (return)
          (let (($localo19
                 (dict ("__class__" List) ("__type__" "instPyList"))))
            (begin
              ((get-field $localo19 "__init__") tmp-dict18)
              (return $localo19)))))))
   (set! set
     (lambda (tmp-dict21)
       (call/ec
        (lambda (return)
          (let (($localo22 (dict ("__class__" set) ("__type__" "instSet"))))
            (begin
              ((get-field $localo22 "__init__") tmp-dict21)
              (return $localo22)))))))
   (set! tuple
     (lambda (tmp-dict24)
       (call/ec
        (lambda (return)
          (let (($localo25
                 (dict ("__class__" tuple) ("__type__" "instTuple"))))
            (begin
              ((get-field $localo25 "__init__") tmp-dict24)
              (return $localo25)))))))
   (set! gbl-dict (dict))
   (dict-set!
    gbl-dict
    object
    (dict
     ("__base__" (list))
     ("__mro__" (list object))
     ("__init__" (lambda v void))))
   (dict-set!
    gbl-dict
    List
    (dict
     ("__base__" (list object))
     ("__mro__" (list List object))
     ("__init__"
      (lambda (self26 tmpdict27)
        (call/ec
         (lambda (return)
           (if (py-list? tmpdict27)
             (set-field!
              self26
              "__containerdict__"
              (dict-ref tmpdict27 "__containerdict__"))
             (set-field! self26 "__containerdict__" tmpdict27))))))))
   (dict-set!
    gbl-dict
    set
    (dict
     ("__base__" (list object))
     ("__mro__" (list set object))
     ("__init__"
      (lambda (self28 tmpdict29)
        (call/ec
         (lambda (return)
           (if (py-list? tmpdict29)
             (set-field!
              self28
              "__containerdict__"
              (dict-ref tmpdict29 "__containerdict__"))
             (set-field! self28 "__containerdict__" tmpdict29))))))))
   (dict-set!
    gbl-dict
    tuple
    (dict
     ("__base__" (list object))
     ("__mro__" (list tuple object))
     ("__init__"
      (lambda (self30 tmp-dict31)
        (call/ec
         (lambda (return)
           (if (let ((t17 (py-list? tmp-dict31)))
                 (begin
                   (if t17
                     t17
                     (let ((t18 (tuple? tmp-dict31)))
                       (begin (if t18 t18 (set? tmp-dict31)))))))
             (set-field!
              self30
              "__containerdict__"
              (dict-ref tmp-dict31 "__containerdict__"))
             (set-field! self30 "__containerdict__" tmp-dict31))))))))
   (set! g$vec1 (List (dict (0 2) (1 4) (2 6))))
   (set! g$vec2 (List (dict (0 4) (1 3) (2 (- 9)))))
   (py-print
    (List
     (let ((res (dict)))
       (let (($i 0))
         (let ((y (void)))
           (let ((x (void)))
             (begin
               (call/ec
                (lambda (break)
                  ((lambda ($seq19 $loop20)
                     (begin (begin (for-container $seq19 $loop20) (void))))
                   g$vec1
                   (lambda (x)
                     (call/ec
                      (lambda (continue)
                        (call/ec
                         (lambda (break)
                           ((lambda ($seq21 $loop22)
                              (begin
                                (begin (for-container $seq21 $loop22) (void))))
                            g$vec2
                            (lambda (y)
                              (call/ec
                               (lambda (continue)
                                 (begin
                                   (dict-set! res $i (* x y))
                                   (set! $i (+ $i 1)))))))))))))))
               res)))))))
   (py-print
    (List
     (let ((res (dict)))
       (let (($i 0))
         (let ((y (void)))
           (let ((x (void)))
             (begin
               (call/ec
                (lambda (break)
                  ((lambda ($seq23 $loop24)
                     (begin (begin (for-container $seq23 $loop24) (void))))
                   g$vec1
                   (lambda (x)
                     (call/ec
                      (lambda (continue)
                        (call/ec
                         (lambda (break)
                           ((lambda ($seq25 $loop26)
                              (begin
                                (begin (for-container $seq25 $loop26) (void))))
                            g$vec2
                            (lambda (y)
                              (call/ec
                               (lambda (continue)
                                 (if (> (+ x y) 6)
                                   (begin
                                     (dict-set! res $i (+ x y))
                                     (set! $i (+ $i 1)))
                                   (void))))))))))))))
               res))))))
    g$vec2)
   (set! g$mat
     (List
      (dict
       (0 (List (dict (0 1) (1 2) (2 3))))
       (1 (List (dict (0 4) (1 5) (2 6))))
       (2 (List (dict (0 7) (1 8) (2 9)))))))
   (py-print
    (List
     (let ((res (dict)))
       (let (($i 0))
         (let ((i (void)))
           (begin
             (call/ec
              (lambda (break)
                ((lambda ($seq27 $loop28)
                   (begin (begin (for-container $seq27 $loop28) (void))))
                 (List (dict (0 0) (1 1) (2 2)))
                 (lambda (i)
                   (call/ec
                    (lambda (continue)
                      (begin
                        (dict-set!
                         res
                         $i
                         (List
                          (let ((res (dict)))
                            (let (($i 0))
                              (let ((row (void)))
                                (begin
                                  (call/ec
                                   (lambda (break)
                                     ((lambda ($seq29 $loop30)
                                        (begin
                                          (begin
                                            (for-container $seq29 $loop30)
                                            (void))))
                                      g$mat
                                      (lambda (row)
                                        (call/ec
                                         (lambda (continue)
                                           (begin
                                             (dict-set!
                                              res
                                              $i
                                              (let ((e11 row))
                                                (begin
                                                  (let ((i12 i))
                                                    (begin
                                                      (if (py-list? e11)
                                                        (py-list-ref e11 i12)
                                                        (if (tuple? e11)
                                                          (tuple-ref e11 i12)
                                                          (if (dict? e11)
                                                            (dict-ref e11 i12)
                                                            (error
                                                             "cannot index object")))))))))
                                             (set! $i (+ $i 1)))))))))
                                  res))))))
                        (set! $i (+ $i 1)))))))))
             res))))))))
