(program
 (define break (void))
 (define return (void))
 (define continue (void))
 (define $current-handler (void))
 (define gbl-dict (void))
 (define object (void))
 (define List (void))
 (define set (void))
 (define tuple (void))
 (define len (void))
 (define g$issubstring (void))
 (define g$SCRIPT_PAT (void))
 (define g$ls (void))
 (define g$res (void))
 (begin
   (set! len
     (lambda (seq14)
       (call/ec
        (lambda (return)
          (let ((cnt15 0))
            (begin
              (if (let ((t11 (py-list? seq14)))
                    (begin
                      (if t11
                        t11
                        (let ((t12 (set? seq14)))
                          (begin (if t12 t12 (tuple? seq14)))))))
                (let ((container16 (dict-ref seq14 "__containerdict__")))
                  (begin
                    (call/ec
                     (lambda (break)
                       ((lambda ($seq13 $loop14)
                          (begin
                            (begin (for-container $seq13 $loop14) (void))))
                        container16
                        (lambda (entry17)
                          (call/ec
                           (lambda (continue) (set! cnt15 (+ 1 cnt15))))))))
                    (return cnt15)))
                (cond
                 (else
                  (call/ec
                   (lambda (break)
                     ((lambda ($seq15 $loop16)
                        (begin (begin (for-container $seq15 $loop16) (void))))
                      seq14
                      (lambda (entry17)
                        (call/ec
                         (lambda (continue) (set! cnt15 (+ cnt15 1))))))))
                  (return cnt15))))))))))
   (set! object (lambda () (void)))
   (set! List
     (lambda (tmp-dict19)
       (call/ec
        (lambda (return)
          (let (($localo20
                 (dict ("__class__" List) ("__type__" "instPyList"))))
            (begin
              ((get-field $localo20 "__init__") tmp-dict19)
              (return $localo20)))))))
   (set! set
     (lambda (tmp-dict22)
       (call/ec
        (lambda (return)
          (let (($localo23 (dict ("__class__" set) ("__type__" "instSet"))))
            (begin
              ((get-field $localo23 "__init__") tmp-dict22)
              (return $localo23)))))))
   (set! tuple
     (lambda (tmp-dict25)
       (call/ec
        (lambda (return)
          (let (($localo26
                 (dict ("__class__" tuple) ("__type__" "instTuple"))))
            (begin
              ((get-field $localo26 "__init__") tmp-dict25)
              (return $localo26)))))))
   (set! gbl-dict (dict))
   (dict-set!
    gbl-dict
    object
    (dict
     ("__base__" (list))
     ("__mro__" (list object))
     ("__init__" (lambda v void))))
   (dict-set!
    gbl-dict
    List
    (dict
     ("__base__" (list object))
     ("__mro__" (list List object))
     ("__init__"
      (lambda (self27 tmpdict28)
        (call/ec
         (lambda (return)
           (if (py-list? tmpdict28)
             (set-field!
              self27
              "__containerdict__"
              (dict-ref tmpdict28 "__containerdict__"))
             (set-field! self27 "__containerdict__" tmpdict28))))))))
   (dict-set!
    gbl-dict
    set
    (dict
     ("__base__" (list object))
     ("__mro__" (list set object))
     ("__init__"
      (lambda (self29 tmpdict30)
        (call/ec
         (lambda (return)
           (if (py-list? tmpdict30)
             (set-field!
              self29
              "__containerdict__"
              (dict-ref tmpdict30 "__containerdict__"))
             (set-field! self29 "__containerdict__" tmpdict30))))))))
   (dict-set!
    gbl-dict
    tuple
    (dict
     ("__base__" (list object))
     ("__mro__" (list tuple object))
     ("__init__"
      (lambda (self31 tmp-dict32)
        (call/ec
         (lambda (return)
           (if (let ((t17 (py-list? tmp-dict32)))
                 (begin
                   (if t17
                     t17
                     (let ((t18 (tuple? tmp-dict32)))
                       (begin (if t18 t18 (set? tmp-dict32)))))))
             (set-field!
              self31
              "__containerdict__"
              (dict-ref tmp-dict32 "__containerdict__"))
             (set-field! self31 "__containerdict__" tmp-dict32))))))))
   (set! g$SCRIPT_PAT
     (List
      (dict (0 "<") (1 "s") (2 "r") (3 "i") (4 "p") (5 "t") (6 "/") (7 ">"))))
   (set! g$issubstring
     (lambda (s p)
       (call/ec
        (lambda (return)
          (let ((j (void)))
            (let ((c (void)))
              (let ((i (void)))
                (begin
                  (set! i 0)
                  (call/ec
                   (lambda (break)
                     (let ((loop (void)))
                       (begin
                         (set! loop
                           (lambda ()
                             (if (<= i (- (len s) (len p)))
                               (begin
                                 (call/ec
                                  (lambda (continue)
                                    (begin
                                      (set! j i)
                                      (call/ec
                                       (lambda (break)
                                         ((lambda ($seq19 $loop20)
                                            (begin
                                              (begin
                                                (for-container $seq19 $loop20)
                                                (void))))
                                          p
                                          (lambda (i13)
                                            (call/ec
                                             (lambda (continue)
                                               (begin
                                                 (set! c i13)
                                                 (begin
                                                   (if (not-equal?
                                                        c
                                                        (let ((e11 s))
                                                          (begin
                                                            (begin
                                                              (let ((i12 j))
                                                                (begin
                                                                  (begin
                                                                    (if (py-list?
                                                                         e11)
                                                                      (py-list-ref
                                                                       e11
                                                                       i12)
                                                                      (if (tuple?
                                                                           e11)
                                                                        (tuple-ref
                                                                         e11
                                                                         i12)
                                                                        (if (dict?
                                                                             e11)
                                                                          (dict-ref
                                                                           e11
                                                                           i12)
                                                                          (error
                                                                           "cannot index object")))))))))))
                                                     (begin (break))
                                                     (begin
                                                       (set! j (+ j 1))
                                                       (if (equal?
                                                            (- j i)
                                                            (len p))
                                                         (begin (return #t))
                                                         (void))))))))))))
                                      (set! i (+ i 1)))))
                                 (loop))
                               (void))))
                         (loop)
                         (void)))))
                  (return #f)))))))))
   (set! g$ls
     (List
      (dict
       (0 "a")
       (1 "<")
       (2 "s")
       (3 "r")
       (4 "i")
       (5 "p")
       (6 "t")
       (7 "/")
       (8 ">"))))
   (set! g$res (g$issubstring g$ls g$SCRIPT_PAT))
   (py-print g$res)))
