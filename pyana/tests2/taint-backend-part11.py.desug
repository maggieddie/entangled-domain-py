(program
 (define break (void))
 (define return (void))
 (define continue (void))
 (define $current-handler (void))
 (define gbl-dict (void))
 (define object (void))
 (define List (void))
 (define set (void))
 (define tuple (void))
 (define len (void))
 (define g$input2 (void))
 (define g$test_init_input (void))
 (define g$test2 (void))
 (define g$OR (void))
 (define g$gen_malicious_input (void))
 (define g$input3 (void))
 (define g$test1 (void))
 (define g$default_mal_strlst (void))
 (define g$proc_results (void))
 (define g$santinize_proc (void))
 (define g$issubstring (void))
 (define g$lst_to_str (void))
 (define g$SCRIPT_PAT (void))
 (define g$input4 (void))
 (define g$input1 (void))
 (define g$CASE_SENSITIVE (void))
 (begin
   (set! len
     (lambda (seq36)
       (call/ec
        (lambda (return)
          (let ((cnt37 0))
            (begin
              (if (let ((t11 (py-list? seq36)))
                    (begin
                      (if t11
                        t11
                        (let ((t12 (set? seq36)))
                          (begin (if t12 t12 (tuple? seq36)))))))
                (let ((container38 (dict-ref seq36 "__containerdict__")))
                  (begin
                    (call/ec
                     (lambda (break)
                       ((lambda ($seq13 $loop14)
                          (begin
                            (begin (for-container $seq13 $loop14) (void))))
                        container38
                        (lambda (entry39)
                          (call/ec
                           (lambda (continue) (set! cnt37 (+ 1 cnt37))))))))
                    (return cnt37)))
                (cond
                 (else
                  (call/ec
                   (lambda (break)
                     ((lambda ($seq15 $loop16)
                        (begin (begin (for-container $seq15 $loop16) (void))))
                      seq36
                      (lambda (entry39)
                        (call/ec
                         (lambda (continue) (set! cnt37 (+ cnt37 1))))))))
                  (return cnt37))))))))))
   (set! object (lambda () (void)))
   (set! List
     (lambda (tmp-dict41)
       (call/ec
        (lambda (return)
          (let (($localo42
                 (dict ("__class__" List) ("__type__" "instPyList"))))
            (begin
              ((get-field $localo42 "__init__") tmp-dict41)
              (return $localo42)))))))
   (set! set
     (lambda (tmp-dict44)
       (call/ec
        (lambda (return)
          (let (($localo45 (dict ("__class__" set) ("__type__" "instSet"))))
            (begin
              ((get-field $localo45 "__init__") tmp-dict44)
              (return $localo45)))))))
   (set! tuple
     (lambda (tmp-dict47)
       (call/ec
        (lambda (return)
          (let (($localo48
                 (dict ("__class__" tuple) ("__type__" "instTuple"))))
            (begin
              ((get-field $localo48 "__init__") tmp-dict47)
              (return $localo48)))))))
   (set! gbl-dict (dict))
   (dict-set!
    gbl-dict
    object
    (dict
     ("__base__" (list))
     ("__mro__" (list object))
     ("__init__" (lambda v void))))
   (dict-set!
    gbl-dict
    List
    (dict
     ("__base__" (list object))
     ("__mro__" (list List object))
     ("__init__"
      (lambda (self49 tmpdict50)
        (call/ec
         (lambda (return)
           (if (py-list? tmpdict50)
             (set-field!
              self49
              "__containerdict__"
              (dict-ref tmpdict50 "__containerdict__"))
             (set-field! self49 "__containerdict__" tmpdict50))))))))
   (dict-set!
    gbl-dict
    set
    (dict
     ("__base__" (list object))
     ("__mro__" (list set object))
     ("__init__"
      (lambda (self51 tmpdict52)
        (call/ec
         (lambda (return)
           (if (py-list? tmpdict52)
             (set-field!
              self51
              "__containerdict__"
              (dict-ref tmpdict52 "__containerdict__"))
             (set-field! self51 "__containerdict__" tmpdict52))))))))
   (dict-set!
    gbl-dict
    tuple
    (dict
     ("__base__" (list object))
     ("__mro__" (list tuple object))
     ("__init__"
      (lambda (self53 tmp-dict54)
        (call/ec
         (lambda (return)
           (if (let ((t17 (py-list? tmp-dict54)))
                 (begin
                   (if t17
                     t17
                     (let ((t18 (tuple? tmp-dict54)))
                       (begin (if t18 t18 (set? tmp-dict54)))))))
             (set-field!
              self53
              "__containerdict__"
              (dict-ref tmp-dict54 "__containerdict__"))
             (set-field! self53 "__containerdict__" tmp-dict54))))))))
   (set! g$OR "OR")
   (set! g$CASE_SENSITIVE "Sensitive")
   (set! g$SCRIPT_PAT
     (List
      (dict (0 "<") (1 "s") (2 "c") (3 "r") (4 "i") (5 "p") (6 "t") (7 ">"))))
   (set! g$lst_to_str
     (lambda (lst)
       (call/ec
        (lambda (return)
          (let ((l (void)))
            (let ((i (void)))
              (let ((res_str (void)))
                (begin
                  (set! l (len lst))
                  (set! i 0)
                  (set! res_str "")
                  (call/ec
                   (lambda (break)
                     (let ((loop (void)))
                       (begin
                         (set! loop
                           (lambda ()
                             (if (< i l)
                               (begin
                                 (call/ec
                                  (lambda (continue)
                                    (begin
                                      (set! res_str
                                        (+
                                         res_str
                                         (let ((e11 lst))
                                           (begin
                                             (begin
                                               (let ((i12 i))
                                                 (begin
                                                   (begin
                                                     (if (py-list? e11)
                                                       (py-list-ref e11 i12)
                                                       (if (tuple? e11)
                                                         (tuple-ref e11 i12)
                                                         (if (dict? e11)
                                                           (dict-ref e11 i12)
                                                           (error
                                                            "cannot index object"))))))))))))
                                      (set! i (+ i 1)))))
                                 (loop))
                               (void))))
                         (loop)
                         (void)))))
                  (return res_str)))))))))
   (set! g$issubstring
     (lambda (s p)
       (call/ec
        (lambda (return)
          (let ((c (void)))
            (let ((j (void)))
              (let ((i (void)))
                (begin
                  (set! i 0)
                  (call/ec
                   (lambda (break)
                     (let ((loop (void)))
                       (begin
                         (set! loop
                           (lambda ()
                             (if (<= i (- (len s) (len p)))
                               (begin
                                 (call/ec
                                  (lambda (continue)
                                    (begin
                                      (set! j i)
                                      (call/ec
                                       (lambda (break)
                                         ((lambda ($seq19 $loop20)
                                            (begin
                                              (begin
                                                (for-container $seq19 $loop20)
                                                (void))))
                                          p
                                          (lambda (i15)
                                            (call/ec
                                             (lambda (continue)
                                               (begin
                                                 (set! c i15)
                                                 (begin
                                                   (if (not-equal?
                                                        c
                                                        (let ((e13 s))
                                                          (begin
                                                            (begin
                                                              (let ((i14 j))
                                                                (begin
                                                                  (begin
                                                                    (if (py-list?
                                                                         e13)
                                                                      (py-list-ref
                                                                       e13
                                                                       i14)
                                                                      (if (tuple?
                                                                           e13)
                                                                        (tuple-ref
                                                                         e13
                                                                         i14)
                                                                        (if (dict?
                                                                             e13)
                                                                          (dict-ref
                                                                           e13
                                                                           i14)
                                                                          (error
                                                                           "cannot index object")))))))))))
                                                     (begin (break))
                                                     (begin
                                                       (set! j (+ j 1))
                                                       (if (equal?
                                                            (- j i)
                                                            (len p))
                                                         (begin (return #t))
                                                         (void))))))))))))
                                      (set! i (+ i 1)))))
                                 (loop))
                               (void))))
                         (loop)
                         (void)))))
                  (return #f)))))))))
   (set! g$santinize_proc
     (lambda (lst)
       (call/ec
        (lambda (return) (begin (return (g$issubstring lst g$SCRIPT_PAT)))))))
   (set! g$proc_results
     (lambda (terms results)
       (call/ec
        (lambda (return)
          (let ((is_valid (void)))
            (let ((l (void)))
              (let ((indx (void)))
                (begin
                  (set! is_valid (g$santinize_proc terms))
                  (if is_valid
                    (begin
                      (py-print "failed because of script")
                      (return (- 1)))
                    (void))
                  (py-print "<div id= \"search_results\">\n<ol>)")
                  (set! l (len results))
                  (if (equal? l 0)
                    (begin
                      (py-print
                       (+
                        "<h3>Your search did not return any results.</h3>"
                        (g$lst_to_str terms))))
                    (void))
                  (set! indx 0)
                  (call/ec
                   (lambda (break)
                     (let ((loop (void)))
                       (begin
                         (set! loop
                           (lambda ()
                             (if (< indx l)
                               (begin
                                 (call/ec
                                  (lambda (continue)
                                    (begin
                                      (py-print
                                       (+
                                        (+
                                         (+
                                          (+
                                           "<li <a href=\"test/"
                                           (let ((e18
                                                  (let ((e16 results))
                                                    (begin
                                                      (begin
                                                        (let ((i17 indx))
                                                          (begin
                                                            (begin
                                                              (if (py-list?
                                                                   e16)
                                                                (py-list-ref
                                                                 e16
                                                                 i17)
                                                                (if (tuple?
                                                                     e16)
                                                                  (tuple-ref
                                                                   e16
                                                                   i17)
                                                                  (if (dict?
                                                                       e16)
                                                                    (dict-ref
                                                                     e16
                                                                     i17)
                                                                    (error
                                                                     "cannot index object"))))))))))))
                                             (begin
                                               (begin
                                                 (let ((i19 1))
                                                   (begin
                                                     (begin
                                                       (if (py-list? e18)
                                                         (py-list-ref e18 i19)
                                                         (if (tuple? e18)
                                                           (tuple-ref e18 i19)
                                                           (if (dict? e18)
                                                             (dict-ref e18 i19)
                                                             (error
                                                              "cannot index object")))))))))))
                                          "?search=true&term=")
                                         (g$lst_to_str terms))
                                        "\">"))
                                      (py-print
                                       (+
                                        (let ((e22
                                               (let ((e20 results))
                                                 (begin
                                                   (begin
                                                     (let ((i21 indx))
                                                       (begin
                                                         (begin
                                                           (if (py-list? e20)
                                                             (py-list-ref
                                                              e20
                                                              i21)
                                                             (if (tuple? e20)
                                                               (tuple-ref
                                                                e20
                                                                i21)
                                                               (if (dict? e20)
                                                                 (dict-ref
                                                                  e20
                                                                  i21)
                                                                 (error
                                                                  "cannot index object"))))))))))))
                                          (begin
                                            (begin
                                              (let ((i23 0))
                                                (begin
                                                  (begin
                                                    (if (py-list? e22)
                                                      (py-list-ref e22 i23)
                                                      (if (tuple? e22)
                                                        (tuple-ref e22 i23)
                                                        (if (dict? e22)
                                                          (dict-ref e22 i23)
                                                          (error
                                                           "cannot index object"))))))))))
                                        "</a>\n"))
                                      (set! indx (+ indx 1)))))
                                 (loop))
                               (void))))
                         (loop)
                         (void)))))
                  (py-print "</ol>\n</div>\n")))))))))
   (set! g$test_init_input
     (lambda ()
       (call/ec
        (lambda (return)
          (let ((res (void)))
            (let ((simulated_cgi_entry1 (void)))
              (begin
                (set! simulated_cgi_entry1
                  (dict
                   ("terms" (List (dict (0 "red") (1 "blue") (2 "three"))))
                   ("boolean" g$OR)
                   ("case" g$CASE_SENSITIVE)
                   ("files"
                    (List
                     (dict
                      (0 "colors.html")
                      (1 "numbers.html")
                      (2 "numbersandcolors.html")
                      (3 "numbersandcolorswithtag.html"))))))
                (set! res
                  (List
                   (dict
                    (0 (tuple (dict (0 "Colors") (1 "colors.html"))))
                    (1 (tuple (dict (0 "Numbers") (1 "numbers.html"))))
                    (2
                     (tuple
                      (dict
                       (0 "Numbers and Colors")
                       (1 "numbersandcolors.html"))))
                    (3
                     (tuple
                      (dict
                       (0 "Numbers and Colors With Tag")
                       (1 "numbersandcolorswithtag.html")))))))
                (return
                 (tuple
                  (dict
                   (0
                    (let ((e24 simulated_cgi_entry1))
                      (begin
                        (let ((i25 "terms"))
                          (begin
                            (if (py-list? e24)
                              (py-list-ref e24 i25)
                              (if (tuple? e24)
                                (tuple-ref e24 i25)
                                (if (dict? e24)
                                  (dict-ref e24 i25)
                                  (error "cannot index object")))))))))
                   (1 res)))))))))))
   (set! g$default_mal_strlst
     (lambda ()
       (call/ec
        (lambda (return)
          (begin
            (return
             (List
              (dict
               (0 "<")
               (1 "/")
               (2 "s")
               (3 "c")
               (4 "i")
               (5 "p")
               (6 "t")
               (7 ">")))))))))
   (set! g$gen_malicious_input
     (lambda ()
       (call/ec
        (lambda (return)
          (let ((simulated_cgi_entry2 (void)))
            (let ((res (void)))
              (begin
                (set! simulated_cgi_entry2
                  (dict ("terms" (g$default_mal_strlst))))
                (set! res (List (dict)))
                (return
                 (tuple
                  (dict
                   (0
                    (let ((e26 simulated_cgi_entry2))
                      (begin
                        (let ((i27 "terms"))
                          (begin
                            (if (py-list? e26)
                              (py-list-ref e26 i27)
                              (if (tuple? e26)
                                (tuple-ref e26 i27)
                                (if (dict? e26)
                                  (dict-ref e26 i27)
                                  (error "cannot index object")))))))))
                   (1 res)))))))))))
   (set! g$test1 (g$test_init_input))
   (set! g$input1
     (let ((e28 g$test1))
       (begin
         (let ((i29 0))
           (begin
             (if (py-list? e28)
               (py-list-ref e28 i29)
               (if (tuple? e28)
                 (tuple-ref e28 i29)
                 (if (dict? e28)
                   (dict-ref e28 i29)
                   (error "cannot index object")))))))))
   (set! g$input2
     (let ((e30 g$test1))
       (begin
         (let ((i31 1))
           (begin
             (if (py-list? e30)
               (py-list-ref e30 i31)
               (if (tuple? e30)
                 (tuple-ref e30 i31)
                 (if (dict? e30)
                   (dict-ref e30 i31)
                   (error "cannot index object")))))))))
   (g$proc_results g$input1 g$input2)
   (py-print "-------------------------------")
   (set! g$test2 (g$gen_malicious_input))
   (set! g$input3
     (let ((e32 g$test2))
       (begin
         (let ((i33 0))
           (begin
             (if (py-list? e32)
               (py-list-ref e32 i33)
               (if (tuple? e32)
                 (tuple-ref e32 i33)
                 (if (dict? e32)
                   (dict-ref e32 i33)
                   (error "cannot index object")))))))))
   (set! g$input4
     (let ((e34 g$test2))
       (begin
         (let ((i35 1))
           (begin
             (if (py-list? e34)
               (py-list-ref e34 i35)
               (if (tuple? e34)
                 (tuple-ref e34 i35)
                 (if (dict? e34)
                   (dict-ref e34 i35)
                   (error "cannot index object")))))))))
   (g$proc_results g$input3 g$input4)))
