(smt:with-context (smt:new-context) (parameterize ((current-namespace (current-namespace))) (define len (make-length 10)) (define append (make-append 10)) (smt:declare-fun smt-var0 () IntList) (smt:declare-fun smt-var1 () IntList) (smt:assert (=/s smt-var1 (list->z3-list (list 10 20 30 40)))) (smt:declare-fun smt-var2 () IntList) (smt:assert (=/s smt-var2 (list->z3-list (list 0 2 1 3)))) (smt:declare-fun smt-var3 () Int) (smt:assert (=/s smt-var3 0)) (smt:declare-fun smt-var4 () Int) (smt:assert (=/s smt-var4 0)) (smt:declare-fun smt-var5 () Int) (smt:assert (=/s smt-var5 (+/s 1 0))) (smt:declare-fun smt-var6 () Int) (smt:assert (=/s smt-var6 1)) (smt:declare-fun smt-var7 () Int) (smt:assert (=/s smt-var7 1)) (smt:declare-fun smt-var8 () Int) (smt:assert (=/s smt-var8 (+/s 1 1))) (smt:declare-fun smt-var9 () Int) (smt:assert (=/s smt-var9 2)) (smt:declare-fun smt-var10 () Int) (smt:assert (=/s smt-var10 2)) (smt:declare-fun smt-var11 () Int) (smt:assert (=/s smt-var11 (+/s 1 2))) (smt:declare-fun smt-var12 () Int) (smt:assert (=/s smt-var12 3)) (smt:declare-fun smt-var13 () Int) (smt:assert (=/s smt-var13 3)) (smt:declare-fun smt-var14 () Int) (smt:assert (=/s smt-var14 (+/s 1 3))) (smt:declare-fun smt-var15 () Int) (smt:assert (=/s smt-var15 4)) (smt:declare-fun smt-var16 () Int) (smt:assert (=/s smt-var16 4)) (smt:declare-fun smt-var17 () Int) (smt:assert (=/s smt-var17 4)) (smt:declare-fun smt-var18 () Int) (smt:assert (=/s smt-var18 0)) (smt:declare-fun smt-var19 () Int) (smt:assert (=/s smt-var19 0)) (smt:declare-fun smt-var20 () Int) (smt:assert (=/s smt-var20 0)) (smt:declare-fun smt-var21 () Int) (smt:assert (=/s smt-var21 0)) (smt:declare-fun smt-var22 () Int) (smt:assert (=/s smt-var22 10)) (smt:declare-fun smt-var23 () Int) (smt:assert (=/s smt-var23 10)) (smt:declare-fun smt-var24 () Int) (smt:assert (=/s smt-var24 10)) (smt:declare-fun smt-var25 () Int) (smt:assert (=/s smt-var25 (+/s 0 1))) (smt:declare-fun smt-var26 () Int) (smt:assert (=/s smt-var26 1)) (smt:declare-fun smt-var27 () Int) (smt:assert (=/s smt-var27 1)) (smt:declare-fun smt-var28 () Int) (smt:assert (=/s smt-var28 1)) (smt:declare-fun smt-var29 () Int) (smt:assert (=/s smt-var29 0)) (smt:declare-fun smt-var30 () Int) (smt:assert (=/s smt-var30 (+/s 1 0))) (smt:declare-fun smt-var31 () Int) (smt:assert (=/s smt-var31 1)) (smt:declare-fun smt-var32 () Int) (smt:assert (=/s smt-var32 1)) (smt:declare-fun smt-var33 () Int) (smt:assert (=/s smt-var33 (+/s 1 1))) (smt:declare-fun smt-var34 () Int) (smt:assert (=/s smt-var34 2)) (smt:declare-fun smt-var35 () Int) (smt:assert (=/s smt-var35 2)) (smt:declare-fun smt-var36 () Int) (smt:assert (=/s smt-var36 (+/s 1 2))) (smt:declare-fun smt-var37 () Int) (smt:assert (=/s smt-var37 3)) (smt:declare-fun smt-var38 () Int) (smt:assert (=/s smt-var38 3)) (smt:declare-fun smt-var39 () Int) (smt:assert (=/s smt-var39 (+/s 1 3))) (smt:declare-fun smt-var40 () Int) (smt:assert (=/s smt-var40 4)) (smt:declare-fun smt-var41 () Int) (smt:assert (=/s smt-var41 4)) (smt:declare-fun smt-var42 () Int) (smt:assert (=/s smt-var42 4)) (smt:declare-fun smt-var43 () Int) (smt:assert (=/s smt-var43 1)) (smt:declare-fun smt-var44 () Int) (smt:assert (=/s smt-var44 2)) (smt:declare-fun smt-var45 () Int) (smt:assert (=/s smt-var45 2)) (smt:declare-fun smt-var46 () Int) (smt:assert (=/s smt-var46 2)) (smt:declare-fun smt-var47 () Int) (smt:assert (=/s smt-var47 30)) (smt:declare-fun smt-var48 () Int) (smt:assert (=/s smt-var48 30)) (smt:declare-fun smt-var49 () Int) (smt:assert (=/s smt-var49 30)) (smt:declare-fun smt-var50 () Int) (smt:assert (=/s smt-var50 (+/s 1 1))) (smt:declare-fun smt-var51 () Int) (smt:assert (=/s smt-var51 2)) (smt:declare-fun smt-var52 () Int) (smt:assert (=/s smt-var52 2)) (smt:declare-fun smt-var53 () Int) (smt:assert (=/s smt-var53 2)) (smt:declare-fun smt-var54 () Int) (smt:assert (=/s smt-var54 0)) (smt:declare-fun smt-var55 () Int) (smt:assert (=/s smt-var55 (+/s 1 0))) (smt:declare-fun smt-var56 () Int) (smt:assert (=/s smt-var56 1)) (smt:declare-fun smt-var57 () Int) (smt:assert (=/s smt-var57 1)) (smt:declare-fun smt-var58 () Int) (smt:assert (=/s smt-var58 (+/s 1 1))) (smt:declare-fun smt-var59 () Int) (smt:assert (=/s smt-var59 2)) (smt:declare-fun smt-var60 () Int) (smt:assert (=/s smt-var60 2)) (smt:declare-fun smt-var61 () Int) (smt:assert (=/s smt-var61 (+/s 1 2))) (smt:declare-fun smt-var62 () Int) (smt:assert (=/s smt-var62 3)) (smt:declare-fun smt-var63 () Int) (smt:assert (=/s smt-var63 3)) (smt:declare-fun smt-var64 () Int) (smt:assert (=/s smt-var64 (+/s 1 3))) (smt:declare-fun smt-var65 () Int) (smt:assert (=/s smt-var65 4)) (smt:declare-fun smt-var66 () Int) (smt:assert (=/s smt-var66 4)) (smt:declare-fun smt-var67 () Int) (smt:assert (=/s smt-var67 4)) (smt:declare-fun smt-var68 () Int) (smt:assert (=/s smt-var68 2)) (smt:declare-fun smt-var69 () Int) (smt:assert (=/s smt-var69 1)) (smt:declare-fun smt-var70 () Int) (smt:assert (=/s smt-var70 1)) (smt:declare-fun smt-var71 () Int) (smt:assert (=/s smt-var71 1)) (smt:declare-fun smt-var72 () Int) (smt:assert (=/s smt-var72 20)) (smt:declare-fun smt-var73 () Int) (smt:assert (=/s smt-var73 20)) (smt:declare-fun smt-var74 () Int) (smt:assert (=/s smt-var74 20)) (smt:declare-fun smt-var75 () Int) (smt:assert (=/s smt-var75 (+/s 2 1))) (smt:declare-fun smt-var76 () Int) (smt:assert (=/s smt-var76 3)) (smt:declare-fun smt-var77 () Int) (smt:assert (=/s smt-var77 3)) (smt:declare-fun smt-var78 () Int) (smt:assert (=/s smt-var78 3)) (smt:declare-fun smt-var79 () Int) (smt:assert (=/s smt-var79 0)) (smt:declare-fun smt-var80 () Int) (smt:assert (=/s smt-var80 (+/s 1 0))) (smt:declare-fun smt-var81 () Int) (smt:assert (=/s smt-var81 1)) (smt:declare-fun smt-var82 () Int) (smt:assert (=/s smt-var82 1)) (smt:declare-fun smt-var83 () Int) (smt:assert (=/s smt-var83 (+/s 1 1))) (smt:declare-fun smt-var84 () Int) (smt:assert (=/s smt-var84 2)) (smt:declare-fun smt-var85 () Int) (smt:assert (=/s smt-var85 2)) (smt:declare-fun smt-var86 () Int) (smt:assert (=/s smt-var86 (+/s 1 2))) (smt:declare-fun smt-var87 () Int) (smt:assert (=/s smt-var87 3)) (smt:declare-fun smt-var88 () Int) (smt:assert (=/s smt-var88 3)) (smt:declare-fun smt-var89 () Int) (smt:assert (=/s smt-var89 (+/s 1 3))) (smt:declare-fun smt-var90 () Int) (smt:assert (=/s smt-var90 4)) (smt:declare-fun smt-var91 () Int) (smt:assert (=/s smt-var91 4)) (smt:declare-fun smt-var92 () Int) (smt:assert (=/s smt-var92 4)) (smt:declare-fun smt-var93 () Int) (smt:assert (=/s smt-var93 3)) (smt:assert (>=/s smt-var93 (len smt-var2))) (smt:check-sat)))
