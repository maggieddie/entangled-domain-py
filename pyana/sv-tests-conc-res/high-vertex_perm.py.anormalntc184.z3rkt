(smt:with-context (smt:new-context) (parameterize ((current-namespace (current-namespace))) (define len (make-length 10)) (define append (make-append 10)) (smt:declare-fun smt-var0 () IntList) (smt:declare-fun smt-var1 () IntList) (smt:assert (=/s smt-var1 (list->z3-list (list 10 20 30 40)))) (smt:declare-fun smt-var2 () IntList) (smt:assert (=/s smt-var2 (list->z3-list (list 0 5 2 1)))) (smt:declare-fun smt-var3 () Int) (smt:assert (=/s smt-var3 0)) (smt:declare-fun smt-var4 () Int) (smt:assert (=/s smt-var4 0)) (smt:declare-fun smt-var5 () Int) (smt:assert (=/s smt-var5 (+/s 1 0))) (smt:declare-fun smt-var6 () Int) (smt:assert (=/s smt-var6 1)) (smt:declare-fun smt-var7 () Int) (smt:assert (=/s smt-var7 1)) (smt:declare-fun smt-var8 () Int) (smt:assert (=/s smt-var8 (+/s 1 1))) (smt:declare-fun smt-var9 () Int) (smt:assert (=/s smt-var9 2)) (smt:declare-fun smt-var10 () Int) (smt:assert (=/s smt-var10 2)) (smt:declare-fun smt-var11 () Int) (smt:assert (=/s smt-var11 (+/s 1 2))) (smt:declare-fun smt-var12 () Int) (smt:assert (=/s smt-var12 3)) (smt:declare-fun smt-var13 () Int) (smt:assert (=/s smt-var13 3)) (smt:declare-fun smt-var14 () Int) (smt:assert (=/s smt-var14 (+/s 1 3))) (smt:declare-fun smt-var15 () Int) (smt:assert (=/s smt-var15 4)) (smt:declare-fun smt-var16 () Int) (smt:assert (=/s smt-var16 4)) (smt:declare-fun smt-var17 () Int) (smt:assert (=/s smt-var17 4)) (smt:declare-fun smt-var18 () Int) (smt:assert (=/s smt-var18 0)) (smt:declare-fun smt-var19 () Int) (smt:assert (=/s smt-var19 0)) (smt:declare-fun smt-var20 () Int) (smt:assert (=/s smt-var20 0)) (smt:declare-fun smt-var21 () Int) (smt:assert (=/s smt-var21 0)) (smt:declare-fun smt-var22 () Int) (smt:assert (=/s smt-var22 10)) (smt:declare-fun smt-var23 () Int) (smt:assert (=/s smt-var23 10)) (smt:declare-fun smt-var24 () Int) (smt:assert (=/s smt-var24 (+/s 0 1))) (smt:declare-fun smt-var25 () Int) (smt:assert (=/s smt-var25 1)) (smt:declare-fun smt-var26 () Int) (smt:assert (=/s smt-var26 1)) (smt:declare-fun smt-var27 () Int) (smt:assert (=/s smt-var27 0)) (smt:declare-fun smt-var28 () Int) (smt:assert (=/s smt-var28 (+/s 1 0))) (smt:declare-fun smt-var29 () Int) (smt:assert (=/s smt-var29 1)) (smt:declare-fun smt-var30 () Int) (smt:assert (=/s smt-var30 1)) (smt:declare-fun smt-var31 () Int) (smt:assert (=/s smt-var31 (+/s 1 1))) (smt:declare-fun smt-var32 () Int) (smt:assert (=/s smt-var32 2)) (smt:declare-fun smt-var33 () Int) (smt:assert (=/s smt-var33 2)) (smt:declare-fun smt-var34 () Int) (smt:assert (=/s smt-var34 (+/s 1 2))) (smt:declare-fun smt-var35 () Int) (smt:assert (=/s smt-var35 3)) (smt:declare-fun smt-var36 () Int) (smt:assert (=/s smt-var36 3)) (smt:declare-fun smt-var37 () Int) (smt:assert (=/s smt-var37 (+/s 1 3))) (smt:declare-fun smt-var38 () Int) (smt:assert (=/s smt-var38 4)) (smt:declare-fun smt-var39 () Int) (smt:assert (=/s smt-var39 4)) (smt:declare-fun smt-var40 () Int) (smt:assert (=/s smt-var40 4)) (smt:declare-fun smt-var41 () Int) (smt:assert (=/s smt-var41 1)) (smt:assert (>=/s smt-var41 (len smt-var2))) (smt:check-sat)))
