(smt:with-context (smt:new-context) (parameterize ((current-namespace (current-namespace))) (define len (make-length 10)) (define append (make-append 10)) (smt:declare-fun smt-var0 () IntList) (smt:declare-fun smt-var1 () IntList) (smt:assert (=/s smt-var1 (list->z3-list (list 1 2 3)))) (smt:declare-fun smt-var2 () Int) (smt:assert (=/s smt-var2 3)) (smt:declare-fun smt-var3 () Int) (smt:assert (=/s smt-var3 3)) (smt:declare-fun smt-var4 () Int) (smt:assert (=/s smt-var4 3)) (smt:assert (>=/s smt-var4 (len smt-var1))) (smt:check-sat)))
