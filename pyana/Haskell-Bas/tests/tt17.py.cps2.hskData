Program [Define "break" AVoid,Define "return" AVoid,Define "continue" AVoid,Define "$current-handler" AVoid,Define "g$v1" AVoid,Define "g$v2" AVoid,Define "g$v3" AVoid,Define "g$v5" AVoid,Define "g$v4" AVoid] (CExp (ContainerK DictK [DictPair (AStr "c",AInt 2)] (ELam (Lam {formals = ["rv0"], body = ContainerK DictK [DictPair (ABool False,AStr "bar")] (ELam (Lam {formals = ["rv1"], body = ContainerK PyListK [SingleE (AStr "hi"),SingleE (Var "rv1")] (ELam (Lam {formals = ["rv2"], body = ContainerK DictK [DictPair (AStr "a",AInt 1),DictPair (AStr "b",Var "rv0"),DictPair (AStr "d",Var "rv2")] (ELam (Lam {formals = ["rv3"], body = SetThen "g$v1" (Var "rv3") (App (ELam (Lam {formals = ["e15","k29"], body = App (ELam (Lam {formals = ["i14","k30"], body = UQuery QPyList (Var "e15") (ELam (Lam {formals = ["rv31"], body = If2 (Var "rv31") (ContainerRef PyListRef (Var "e15") (Var "i14") (Var "k30")) (UQuery QTuple (Var "e15") (ELam (Lam {formals = ["rv32"], body = If2 (Var "rv32") (ContainerRef TupleRef (Var "e15") (Var "i14") (Var "k30")) (UQuery QDict (Var "e15") (ELam (Lam {formals = ["rv33"], body = If2 (Var "rv33") (ContainerRef DictRef (Var "e15") (Var "i14") (Var "k30")) (Error (AStr "cannot index object") (Var "k30"))})))})))}))})) [AStr "b",Var "k29"]})) [Var "g$v1",ELam (Lam {formals = ["rv4"], body = SetThen "g$v2" (Var "rv4") (App (ELam (Lam {formals = ["e17","k24"], body = App (ELam (Lam {formals = ["i16","k25"], body = UQuery QPyList (Var "e17") (ELam (Lam {formals = ["rv26"], body = If2 (Var "rv26") (ContainerRef PyListRef (Var "e17") (Var "i16") (Var "k25")) (UQuery QTuple (Var "e17") (ELam (Lam {formals = ["rv27"], body = If2 (Var "rv27") (ContainerRef TupleRef (Var "e17") (Var "i16") (Var "k25")) (UQuery QDict (Var "e17") (ELam (Lam {formals = ["rv28"], body = If2 (Var "rv28") (ContainerRef DictRef (Var "e17") (Var "i16") (Var "k25")) (Error (AStr "cannot index object") (Var "k25"))})))})))}))})) [AStr "d",Var "k24"]})) [Var "g$v1",ELam (Lam {formals = ["rv5"], body = SetThen "g$v3" (Var "rv5") (App (ELam (Lam {formals = ["e19","k19"], body = App (ELam (Lam {formals = ["i18","k20"], body = UQuery QPyList (Var "e19") (ELam (Lam {formals = ["rv21"], body = If2 (Var "rv21") (ContainerRef PyListRef (Var "e19") (Var "i18") (Var "k20")) (UQuery QTuple (Var "e19") (ELam (Lam {formals = ["rv22"], body = If2 (Var "rv22") (ContainerRef TupleRef (Var "e19") (Var "i18") (Var "k20")) (UQuery QDict (Var "e19") (ELam (Lam {formals = ["rv23"], body = If2 (Var "rv23") (ContainerRef DictRef (Var "e19") (Var "i18") (Var "k20")) (Error (AStr "cannot index object") (Var "k20"))})))})))}))})) [AInt 0,Var "k19"]})) [Var "g$v3",ELam (Lam {formals = ["rv6"], body = SetThen "g$v4" (Var "rv6") (App (ELam (Lam {formals = ["e21","k14"], body = App (ELam (Lam {formals = ["i20","k15"], body = UQuery QPyList (Var "e21") (ELam (Lam {formals = ["rv16"], body = If2 (Var "rv16") (ContainerRef PyListRef (Var "e21") (Var "i20") (Var "k15")) (UQuery QTuple (Var "e21") (ELam (Lam {formals = ["rv17"], body = If2 (Var "rv17") (ContainerRef TupleRef (Var "e21") (Var "i20") (Var "k15")) (UQuery QDict (Var "e21") (ELam (Lam {formals = ["rv18"], body = If2 (Var "rv18") (ContainerRef DictRef (Var "e21") (Var "i20") (Var "k15")) (Error (AStr "cannot index object") (Var "k15"))})))})))}))})) [AInt 1,Var "k14"]})) [Var "g$v3",ELam (Lam {formals = ["rv13"], body = App (ELam (Lam {formals = ["e23","k8"], body = App (ELam (Lam {formals = ["i22","k9"], body = UQuery QPyList (Var "e23") (ELam (Lam {formals = ["rv10"], body = If2 (Var "rv10") (ContainerRef PyListRef (Var "e23") (Var "i22") (Var "k9")) (UQuery QTuple (Var "e23") (ELam (Lam {formals = ["rv11"], body = If2 (Var "rv11") (ContainerRef TupleRef (Var "e23") (Var "i22") (Var "k9")) (UQuery QDict (Var "e23") (ELam (Lam {formals = ["rv12"], body = If2 (Var "rv12") (ContainerRef DictRef (Var "e23") (Var "i22") (Var "k9")) (Error (AStr "cannot index object") (Var "k9"))})))})))}))})) [ABool False,Var "k8"]})) [Var "rv13",ELam (Lam {formals = ["rv7"], body = SetThen "g$v5" (Var "rv7") (App AHalt [AVoid])})]})])})])})])})])}))}))}))}))))