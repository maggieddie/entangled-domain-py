(program
 (define break (void))
 (define return (void))
 (define continue (void))
 (define $current-handler (void))
 (define g$a (void))
 (define g$foo (void))
 (define g$bar (void))
 (set-then!
  g$foo
  (lambda (a b k0)
    ((lambda (f cc) (f (lambda (x k) (cc x)) cc))
     (lambda (return k1)
       ((lambda (k2) (tuple-k a b (lambda (rv3) (return rv3 k2)))) k1))
     k0))
  (set-then!
   g$bar
   (lambda (k4)
     ((lambda (f cc) (f (lambda (x k) (cc x)) cc))
      (lambda (return k5)
        ((lambda (k6)
           (g$foo
            "string"
            6
            (lambda (rv13)
              ((lambda (e15 k8)
                 ((lambda (i14 k9)
                    ((cps py-list?)
                     e15
                     (lambda (rv10)
                       (if rv10
                         ((cps py-list-ref) e15 i14 k9)
                         ((cps tuple?)
                          e15
                          (lambda (rv11)
                            (if rv11
                              ((cps tuple-ref) e15 i14 k9)
                              ((cps dict?)
                               e15
                               (lambda (rv12)
                                 (if rv12
                                   ((cps dict-ref) e15 i14 k9)
                                   (error "cannot index object" k9)))))))))))
                  0
                  k8))
               rv13
               (lambda (rv7) (return rv7 k6))))))
         k5))
      k4))
   (g$bar (lambda (rv14) (set-then! g$a rv14 ($halt (void))))))))
