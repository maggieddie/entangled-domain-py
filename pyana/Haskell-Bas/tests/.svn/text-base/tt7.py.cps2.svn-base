(program
 (define break (void))
 (define return (void))
 (define continue (void))
 (define $current-handler (void))
 (define g$a (void))
 (define g$foo (void))
 (define g$bar (void))
 (set-then!
  g$foo
  (lambda (k0)
    ((lambda (f cc) (f (lambda (x k) (cc x)) cc))
     (lambda (return k1) ((lambda (k2) (return 2 k2)) k1))
     k0))
  (set-then!
   g$bar
   (lambda (k3)
     ((lambda (f cc) (f (lambda (x k) (cc x)) cc))
      (lambda (return k4)
        ((lambda (k5) (g$foo (lambda (rv6) (return rv6 k5)))) k4))
      k3))
   (g$bar (lambda (rv7) (set-then! g$a rv7 ($halt (void))))))))
