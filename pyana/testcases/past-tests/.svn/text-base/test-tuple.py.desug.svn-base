(program
 (define break (void))
 (define return (void))
 (define continue (void))
 (define $current-handler (void))
 (define gbl-dict (void))
 (define object (void))
 (define List (void))
 (define set (void))
 (define tuple (void))
 (define g$b (void))
 (define g$t (void))
 (define g$a (void))
 (define g$u (void))
 (begin
   (set! object (lambda () (void)))
   (set! List
     (lambda (tmp-dict23)
       (call/ec
        (lambda (return)
          (let (($localo24
                 (dict ("__class__" List) ("__type__" "instPyList"))))
            (begin
              ((get-field $localo24 "__init__") tmp-dict23)
              (return $localo24)))))))
   (set! set
     (lambda (tmp-dict26)
       (call/ec
        (lambda (return)
          (let (($localo27 (dict ("__class__" set) ("__type__" "instSet"))))
            (begin
              ((get-field $localo27 "__init__") tmp-dict26)
              (return $localo27)))))))
   (set! tuple
     (lambda (tmp-dict29)
       (call/ec
        (lambda (return)
          (let (($localo30
                 (dict ("__class__" tuple) ("__type__" "instTuple"))))
            (begin
              ((get-field $localo30 "__init__") tmp-dict29)
              (return $localo30)))))))
   (set! gbl-dict
     (dict
      (object
       (dict
        ("__base__" (list))
        ("__mro__" (list object))
        ("__init__" (lambda v void))))
      (List
       (dict
        ("__base__" (list object))
        ("__mro__" (list List object))
        ("__init__"
         (lambda (self31 tmpdict32)
           (call/ec
            (lambda (return)
              (if (py-list? tmpdict32)
                (set-field!
                 self31
                 "__containerdict__"
                 (dict-ref tmpdict32 "__containerdict__"))
                (set-field! self31 "__containerdict__" tmpdict32))))))))
      (set
       (dict
        ("__base__" (list object))
        ("__mro__" (list set object))
        ("__init__"
         (lambda (self33 tmpdict34)
           (call/ec
            (lambda (return)
              (if (py-list? tmpdict34)
                (set-field!
                 self33
                 "__containerdict__"
                 (dict-ref tmpdict34 "__containerdict__"))
                (set-field! self33 "__containerdict__" tmpdict34))))))))
      (tuple
       (dict
        ("__base__" (list object))
        ("__mro__" (list tuple object))
        ("__init__"
         (lambda (self35 tmp-dict36)
           (call/ec
            (lambda (return)
              (if (let ((t11 (py-list? tmp-dict36)))
                    (begin
                      (if t11
                        t11
                        (let ((t12 (tuple? tmp-dict36)))
                          (begin (if t12 t12 (set? tmp-dict36)))))))
                (set-field!
                 self35
                 "__containerdict__"
                 (dict-ref tmp-dict36 "__containerdict__"))
                (set-field! self35 "__containerdict__" tmp-dict36))))))))))
   (set! g$t (tuple (dict (0 12345) (1 54321) (2 "hello!"))))
   (py-print
    (let ((e11 g$t))
      (begin
        (let ((i12 0))
          (begin
            (if (py-list? e11)
              (py-list-ref e11 i12)
              (if (tuple? e11)
                (tuple-ref e11 i12)
                (if (dict? e11)
                  (dict-ref e11 i12)
                  (error "cannot index object")))))))))
   (py-print g$t)
   (set! g$u
     (tuple (dict (0 g$t) (1 (tuple (dict (0 1) (1 2) (2 3) (3 4) (4 5)))))))
   (py-print
    (let ((e13 g$u))
      (begin
        (let ((i14 0))
          (begin
            (if (py-list? e13)
              (py-list-ref e13 i14)
              (if (tuple? e13)
                (tuple-ref e13 i14)
                (if (dict? e13)
                  (dict-ref e13 i14)
                  (error "cannot index object")))))))))
   (py-print
    (let ((e15 g$u))
      (begin
        (let ((i16 1))
          (begin
            (if (py-list? e15)
              (py-list-ref e15 i16)
              (if (tuple? e15)
                (tuple-ref e15 i16)
                (if (dict? e15)
                  (dict-ref e15 i16)
                  (error "cannot index object")))))))))
   (py-print g$u)
   (let ((t17 (tuple (dict (0 (List (dict (0 100) (1 200)))) (1 "hi")))))
     (begin
       (set! g$a
         (let ((e18 t17))
           (begin
             (let ((i19 0))
               (begin
                 (if (py-list? e18)
                   (py-list-ref e18 i19)
                   (if (tuple? e18)
                     (tuple-ref e18 i19)
                     (if (dict? e18)
                       (dict-ref e18 i19)
                       (error "cannot index object")))))))))
       (set! g$b
         (let ((e20 t17))
           (begin
             (let ((i21 1))
               (begin
                 (if (py-list? e20)
                   (py-list-ref e20 i21)
                   (if (tuple? e20)
                     (tuple-ref e20 i21)
                     (if (dict? e20)
                       (dict-ref e20 i21)
                       (error "cannot index object")))))))))))
   (py-print g$a)))
