(program
 (define gbl-dict (void))
 (define object (void))
 (define List (void))
 (define set (void))
 (define tuple (void))
 (define Bar (void))
 (define Foo (void))
 (define g (void))
 (set-global! object (lambda () (void)))
 (set-global!
  List
  (lambda (tmp-dict14)
    (call/ec
     (lambda (return)
       (let (($localo15
              (dict
               ("__class__" (get-global List))
               ("__type__" "instPyList"))))
         ((get-field $localo15 "__init__") tmp-dict14)
         (return $localo15))))))
 (set-global!
  set
  (lambda (tmp-dict17)
    (call/ec
     (lambda (return)
       (let (($localo18
              (dict ("__class__" (get-global set)) ("__type__" "instSet"))))
         ((get-field $localo18 "__init__") tmp-dict17)
         (return $localo18))))))
 (set-global!
  tuple
  (lambda (tmp-dict20)
    (call/ec
     (lambda (return)
       (let (($localo21
              (dict
               ("__class__" (get-global tuple))
               ("__type__" "instTuple"))))
         ((get-field $localo21 "__init__") tmp-dict20)
         (return $localo21))))))
 (set-global!
  gbl-dict
  (dict
   (object
    (dict
     ("__base__" (list))
     ("__mro__" (list object))
     ("__init__" (lambda v void))))
   (List
    (dict
     ("__base__" (list object))
     ("__mro__" (list List object))
     ("__init__"
      (lambda (self22 tmpdict23)
        (call/ec
         (lambda (return)
           (if (py-list? tmpdict23)
             (set-field!
              self22
              "__containerdict__"
              (dict-ref tmpdict23 "__containerdict__"))
             (set-field! self22 "__containerdict__" tmpdict23))))))))
   (set
    (dict
     ("__base__" (list object))
     ("__mro__" (list set object))
     ("__init__"
      (lambda (self24 tmpdict25)
        (call/ec
         (lambda (return)
           (if (py-list? tmpdict25)
             (set-field!
              self24
              "__containerdict__"
              (dict-ref tmpdict25 "__containerdict__"))
             (set-field! self24 "__containerdict__" tmpdict25))))))))
   (tuple
    (dict
     ("__base__" (list object))
     ("__mro__" (list tuple object))
     ("__init__"
      (lambda (self26 tmp-dict27)
        (call/ec
         (lambda (return)
           (if (or (py-list? tmp-dict27) (tuple? tmp-dict27) (set? tmp-dict27))
             (set-field!
              self26
              "__containerdict__"
              (dict-ref tmp-dict27 "__containerdict__"))
             (set-field! self26 "__containerdict__" tmp-dict27))))))))))
 ((lambda ()
    (begin
      (set-global!
       Foo
       (lambda ()
         (call/ec
          (lambda (return)
            (let ((bar (void)) (x (void)))
              (let (($localo11
                     (dict
                      ("__class__" (get-global Foo))
                      ("__type__" "instFoo"))))
                ((get-field $localo11 "__init__"))
                (return $localo11)))))))
      (dict-set!
       gbl-dict
       (get-global Foo)
       (dict
        ("__base__" (list object))
        ("__class__" (get-global Foo))
        ("__type__" "class")
        ("bar"
         (lambda (self)
           (call/ec
            (lambda (return) (let () (py-print "I'am doing Foo.bar()"))))))
        ("x" 10)))
      (dict-set!
       (dict-ref gbl-dict (get-global Foo))
       "__mro__"
       (list (get-global Foo) object)))))
 ((lambda ()
    (begin
      (set-global!
       Bar
       (lambda ()
         (call/ec
          (lambda (return)
            (let ((y (void)) (bar (void)))
              (let (($localo12
                     (dict
                      ("__class__" (get-global Bar))
                      ("__type__" "instBar"))))
                ((get-field $localo12 "__init__"))
                (return $localo12)))))))
      (dict-set!
       gbl-dict
       (get-global Bar)
       (dict
        ("__base__" (list (get-global Foo) object))
        ("__class__" (get-global Bar))
        ("__type__" "class")
        ("bar"
         (lambda (self)
           (call/ec
            (lambda (return)
              (let ()
                (py-print "I am doing Bar.bar()")
                ((get-field (get-global Foo) "bar") self))))))
        ("y" 9)))
      (dict-set!
       (dict-ref gbl-dict (get-global Bar))
       "__mro__"
       (list (get-global Bar) (get-global Foo) object)))))
 (set-global! g ((get-global Bar)))
 ((get-field (get-global Bar) "bar") (get-global g))
 (py-print (get-field (get-global g) "y"))
 (py-print (get-field (get-global g) "x")))
