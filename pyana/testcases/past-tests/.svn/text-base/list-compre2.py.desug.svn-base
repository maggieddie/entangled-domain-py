(program
 (define break (void))
 (define return (void))
 (define continue (void))
 (define $current-handler (void))
 (define gbl-dict (void))
 (define object (void))
 (define List (void))
 (define set (void))
 (define tuple (void))
 (define g$mat (void))
 (define g$vec1 (void))
 (define g$vec2 (void))
 (begin
   (set! object (lambda () (void)))
   (set! List
     (lambda (tmp-dict14)
       (call/ec
        (lambda (return)
          (let (($localo15
                 (dict ("__class__" List) ("__type__" "instPyList"))))
            (begin
              ((get-field $localo15 "__init__") tmp-dict14)
              (return $localo15)))))))
   (set! set
     (lambda (tmp-dict17)
       (call/ec
        (lambda (return)
          (let (($localo18 (dict ("__class__" set) ("__type__" "instSet"))))
            (begin
              ((get-field $localo18 "__init__") tmp-dict17)
              (return $localo18)))))))
   (set! tuple
     (lambda (tmp-dict20)
       (call/ec
        (lambda (return)
          (let (($localo21
                 (dict ("__class__" tuple) ("__type__" "instTuple"))))
            (begin
              ((get-field $localo21 "__init__") tmp-dict20)
              (return $localo21)))))))
   (set! gbl-dict
     (dict
      (object
       (dict
        ("__base__" (list))
        ("__mro__" (list object))
        ("__init__" (lambda v void))))
      (List
       (dict
        ("__base__" (list object))
        ("__mro__" (list List object))
        ("__init__"
         (lambda (self22 tmpdict23)
           (call/ec
            (lambda (return)
              (if (py-list? tmpdict23)
                (set-field!
                 self22
                 "__containerdict__"
                 (dict-ref tmpdict23 "__containerdict__"))
                (set-field! self22 "__containerdict__" tmpdict23))))))))
      (set
       (dict
        ("__base__" (list object))
        ("__mro__" (list set object))
        ("__init__"
         (lambda (self24 tmpdict25)
           (call/ec
            (lambda (return)
              (if (py-list? tmpdict25)
                (set-field!
                 self24
                 "__containerdict__"
                 (dict-ref tmpdict25 "__containerdict__"))
                (set-field! self24 "__containerdict__" tmpdict25))))))))
      (tuple
       (dict
        ("__base__" (list object))
        ("__mro__" (list tuple object))
        ("__init__"
         (lambda (self26 tmp-dict27)
           (call/ec
            (lambda (return)
              (if (let ((t11 (py-list? tmp-dict27)))
                    (begin
                      (if t11
                        t11
                        (let ((t12 (tuple? tmp-dict27)))
                          (begin (if t12 t12 (set? tmp-dict27)))))))
                (set-field!
                 self26
                 "__containerdict__"
                 (dict-ref tmp-dict27 "__containerdict__"))
                (set-field! self26 "__containerdict__" tmp-dict27))))))))))
   (set! g$vec1 (List (dict (0 2) (1 4) (2 6))))
   (set! g$vec2 (List (dict (0 4) (1 3) (2 (- 9)))))
   (py-print
    (List
     (let ((res (dict)))
       (let (($i 0))
         (let ((y (void)))
           (let ((x (void)))
             (begin
               (call/ec
                (lambda (break)
                  ((lambda ($seq13 $loop14)
                     (begin (begin (for-container $seq13 $loop14) (void))))
                   g$vec1
                   (lambda (x)
                     (call/ec
                      (lambda (continue)
                        (call/ec
                         (lambda (break)
                           ((lambda ($seq15 $loop16)
                              (begin
                                (begin (for-container $seq15 $loop16) (void))))
                            g$vec2
                            (lambda (y)
                              (call/ec
                               (lambda (continue)
                                 (begin
                                   (dict-set! res $i (* x y))
                                   (set! $i (+ $i 1)))))))))))))))
               res)))))))
   (py-print
    (List
     (let ((res (dict)))
       (let (($i 0))
         (let ((y (void)))
           (let ((x (void)))
             (begin
               (call/ec
                (lambda (break)
                  ((lambda ($seq17 $loop18)
                     (begin (begin (for-container $seq17 $loop18) (void))))
                   g$vec1
                   (lambda (x)
                     (call/ec
                      (lambda (continue)
                        (call/ec
                         (lambda (break)
                           ((lambda ($seq19 $loop20)
                              (begin
                                (begin (for-container $seq19 $loop20) (void))))
                            g$vec2
                            (lambda (y)
                              (call/ec
                               (lambda (continue)
                                 (if (> (+ x y) 6)
                                   (begin
                                     (dict-set! res $i (+ x y))
                                     (set! $i (+ $i 1)))
                                   (void))))))))))))))
               res))))))
    g$vec2)
   (set! g$mat
     (List
      (dict
       (0 (List (dict (0 1) (1 2) (2 3))))
       (1 (List (dict (0 4) (1 5) (2 6))))
       (2 (List (dict (0 7) (1 8) (2 9)))))))
   (py-print
    (List
     (let ((res (dict)))
       (let (($i 0))
         (let ((i (void)))
           (begin
             (call/ec
              (lambda (break)
                ((lambda ($seq21 $loop22)
                   (begin (begin (for-container $seq21 $loop22) (void))))
                 (List (dict (0 0) (1 1) (2 2)))
                 (lambda (i)
                   (call/ec
                    (lambda (continue)
                      (begin
                        (dict-set!
                         res
                         $i
                         (List
                          (let ((res (dict)))
                            (let (($i 0))
                              (let ((row (void)))
                                (begin
                                  (call/ec
                                   (lambda (break)
                                     ((lambda ($seq23 $loop24)
                                        (begin
                                          (begin
                                            (for-container $seq23 $loop24)
                                            (void))))
                                      g$mat
                                      (lambda (row)
                                        (call/ec
                                         (lambda (continue)
                                           (begin
                                             (dict-set!
                                              res
                                              $i
                                              (let ((e11 row))
                                                (begin
                                                  (let ((i12 i))
                                                    (begin
                                                      (if (py-list? e11)
                                                        (py-list-ref e11 i12)
                                                        (if (tuple? e11)
                                                          (tuple-ref e11 i12)
                                                          (if (dict? e11)
                                                            (dict-ref e11 i12)
                                                            (error
                                                             "cannot index object")))))))))
                                             (set! $i (+ $i 1)))))))))
                                  res))))))
                        (set! $i (+ $i 1)))))))))
             res))))))))
