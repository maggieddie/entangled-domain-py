(program
 (define gbl-dict (void))
 (define object (void))
 (define List (void))
 (define set (void))
 (define tuple (void))
 (define A (void))
 (define a (void))
 (define va (void))
 (set-global! object (lambda () (void)))
 (set-global!
  List
  (lambda (tmp-dict13)
    (call/ec
     (lambda (return)
       (let (($localo14
              (dict
               ("__class__" (get-global List))
               ("__type__" "instPyList"))))
         ((get-field $localo14 "__init__") tmp-dict13)
         (return $localo14))))))
 (set-global!
  set
  (lambda (tmp-dict16)
    (call/ec
     (lambda (return)
       (let (($localo17
              (dict ("__class__" (get-global set)) ("__type__" "instSet"))))
         ((get-field $localo17 "__init__") tmp-dict16)
         (return $localo17))))))
 (set-global!
  tuple
  (lambda (tmp-dict19)
    (call/ec
     (lambda (return)
       (let (($localo20
              (dict
               ("__class__" (get-global tuple))
               ("__type__" "instTuple"))))
         ((get-field $localo20 "__init__") tmp-dict19)
         (return $localo20))))))
 (set-global!
  gbl-dict
  (dict
   (object
    (dict
     ("__base__" (list))
     ("__mro__" (list object))
     ("__init__" (lambda v void))))
   (List
    (dict
     ("__base__" (list object))
     ("__mro__" (list List object))
     ("__init__"
      (lambda (self21 tmpdict22)
        (call/ec
         (lambda (return)
           (if (py-list? tmpdict22)
             (set-field!
              self21
              "__containerdict__"
              (dict-ref tmpdict22 "__containerdict__"))
             (set-field! self21 "__containerdict__" tmpdict22))))))))
   (set
    (dict
     ("__base__" (list object))
     ("__mro__" (list set object))
     ("__init__"
      (lambda (self23 tmpdict24)
        (call/ec
         (lambda (return)
           (if (py-list? tmpdict24)
             (set-field!
              self23
              "__containerdict__"
              (dict-ref tmpdict24 "__containerdict__"))
             (set-field! self23 "__containerdict__" tmpdict24))))))))
   (tuple
    (dict
     ("__base__" (list object))
     ("__mro__" (list tuple object))
     ("__init__"
      (lambda (self25 tmp-dict26)
        (call/ec
         (lambda (return)
           (if (or (py-list? tmp-dict26) (tuple? tmp-dict26) (set? tmp-dict26))
             (set-field!
              self25
              "__containerdict__"
              (dict-ref tmp-dict26 "__containerdict__"))
             (set-field! self25 "__containerdict__" tmp-dict26))))))))))
 ((lambda ()
    (begin
      (set-global!
       A
       (lambda (x)
         (call/ec
          (lambda (return)
            (let (($localo11
                   (dict ("__class__" (get-global A)) ("__type__" "instA"))))
              ((get-field $localo11 "__init__") x)
              (return $localo11))))))
      (dict-set!
       gbl-dict
       (get-global A)
       (dict
        ("__base__" (list object))
        ("__class__" (get-global A))
        ("__type__" "class")
        ("__init__"
         (lambda (self x)
           (call/ec (lambda (return) (let () (set-field! self "x" x))))))
        ("getx"
         (lambda (self)
           (call/ec
            (lambda (return) (let () (return (get-field self "x")))))))))
      (dict-set!
       (dict-ref gbl-dict (get-global A))
       "__mro__"
       (list (get-global A) object)))))
 (set-global! a ((get-global A) "x in A"))
 (set-global! va ((get-field (get-global a) "getx")))
 (py-print (get-global va)))
