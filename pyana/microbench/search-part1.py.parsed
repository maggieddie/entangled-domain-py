(program
 (= (OR) "OR")
 (= (CASE_SENSITIVE) "Sensitive")
 (= (SCRIPT_PAT) (list "<" "s" "c" "r" "i" "p" "t" ">"))
 (def
  (lst_to_str lst)
  (suite
   (= (l) (indexed len (called lst)))
   (= (i) 0)
   (= (res_str) "")
   (while
    (comparison i ("<" l))
    (suite
     (= (res_str) (arith res_str ("+" (indexed lst (subscript i)))))
     (= (i) (arith i ("+" 1)))))
   (return res_str)))
 (def
  (issubstring s p)
  (suite
   (= (i) 0)
   (= (tmpl) (indexed len (called p)))
   (while
    (comparison i ("<=" (arith (indexed len (called s)) ("-" tmpl))))
    (suite
     (= (j) i)
     (for
      c
      p
      (suite
       (cond
        ((comparison c ("!=" (indexed s (subscript j)))) (suite (break)))
        (else
         (suite
          (= (j) (arith j ("+" 1)))
          (cond
           ((comparison (arith j ("-" i)) ("==" tmpl))
            (suite (return True)))))))))
     (= (i) (arith i ("+" 1)))))
   (return False)))
 (class (Request)
   (suite
    (def (__init__ self data) (suite (= ((indexed self (dot data))) data)))
    (def
     (santinize_proc self)
     (suite
      (=
       (res)
       (indexed issubstring (called (indexed self (dot data)) SCRIPT_PAT)))
      (cond
       ((comparison res ("==" True))
        (suite (= ((indexed self (dot data))) ("-" 1)))))))
    (def (getData self) (suite (return (indexed self (dot data)))))))
 	(class (Response)
	   (suite
	    (def
	     (__init__ self req)
	     (suite
	      (= ((indexed self (dot result))) (list))
	      (= ((indexed self (dot body))) "")
	      (= ((indexed self (dot req))) req)))
	    (def
	     (gen_body self)
	     (suite
	      (= (len_res) (indexed len (called (indexed self (dot result)))))
	      (= (tmp) "<div id= \"search_results\">\n<ol>)\n")
	      (cond
	       ((comparison len_res ("==" 0))
	        (suite
	         (=
	          ((indexed self (dot body)))
	          (arith
	           tmp
	           ("+" "<h3>Your search did not return any results.</h3>")
	           ("+"
	            (indexed
	             lst_to_str
	             (called (indexed self (dot req) (dot getData) (called))))))))))
	      (= (indx) 0)
	      (while
	       (comparison indx ("<" len_res))
	       (suite
	        (=
	         ((indexed self (dot body)))
	         (arith
	          (indexed self (dot body))
	          ("+" "<li <a href=\"test/")
	          ("+" (indexed self (dot result) (subscript indx) (subscript 1)))
	          ("+" "?search=true&term=")
	          ("+"
	           (indexed
	            lst_to_str
	            (called (indexed self (dot req) (dot getData) (called)))))
	          ("+" "\">\n")
	          ("+" (indexed self (dot result) (subscript indx) (subscript 0)))
	          ("+" "</a>\n")))
	        (= (indx) (arith indx ("+" 1)))))
	      (=
	       ((indexed self (dot body)))
	       (arith (indexed self (dot body)) ("+" "</ol>\n</div>\n")))))))
 	(class (Search)
	   (suite
	    (def
	     (__init__ self input)
	     (suite
	      (=
	       ((indexed self (dot resp)))
	       (indexed Response (called (indexed Request (called input)))))))
	    (def
	     (doSearch self)
	     (suite
	      (expr (indexed self (dot resp) (dot req) (dot santinize_proc) (called)))
	      (cond
	       ((comparison
	         (indexed self (dot resp) (dot req) (dot getData) (called))
	         ("==" ("-" 1)))
	        (suite
	         (expr (indexed print (called "no scripting allowed")))
	         (return))))
	      (=
	       (l)
	       (indexed
	        len
	        (called (indexed self (dot resp) (dot req) (dot getData) (called)))))
	      (cond
	       ((comparison l (">" 3))
	        (suite (= ((indexed self (dot resp) (dot result))) (list))))
	       (else
	        (suite
	         (=
	          ((indexed self (dot resp) (dot result)))
	          (list
	           (tuple "Colors" "colors.html")
	           (tuple "Numbers" "numbers.html")
	           (tuple "Numbers and Colors" "numbersandcolors.html")
	           (tuple
	            "Numbers and Colors With Tag"
	            "numbersandcolorswithtag.html"))))))
	      (expr (indexed self (dot resp) (dot gen_body) (called)))))
	    (def
	     (render self)
	     (suite
	      (expr (indexed print (called (indexed self (dot resp) (dot body)))))))))
	 (def
	  (test_init_input)
	  (suite
	   (=
	    (simulated_cgi_entry1)
	    (dict
	     ("terms" (list "red" "blue" "three"))
	     ("boolean" OR)
	     ("case" CASE_SENSITIVE)
	     ("files"
	      (list
	       "colors.html"
	       "numbers.html"
	       "numbersandcolors.html"
	       "numbersandcolorswithtag.html"))))
	   (return (indexed simulated_cgi_entry1 (subscript "terms")))))
	 (def
	  (mock_mal_strlst)
	  (suite (return (list "e" "<" "s" "c" "r" "i" "p" "t" ">"))))
	 (def
	  (gen_malicious_input)
	  (suite
	   (=
	    (simulated_cgi_entry2)
	    (dict ("terms" (indexed mock_mal_strlst (called)))))
	   (return (indexed simulated_cgi_entry2 (subscript "terms")))))
	 (= (srch1) (indexed Search (called (indexed test_init_input (called)))))
	 (expr (indexed srch1 (dot doSearch) (called)))
	 (expr (indexed srch1 (dot render) (called)))
	 (= (srch2) (indexed Search (called (indexed gen_malicious_input (called)))))
	 (expr (indexed srch2 (dot doSearch) (called)))
	 (expr (indexed srch2 (dot render) (called))))

