(program
 (define break (void))
 (define return (void))
 (define continue (void))
 (define $current-handler (void))
 (define gbl-dict (void))
 (define object (void))
 (define List (void))
 (define set (void))
 (define tuple (void))
 (define len (void))
 (define g$str_my (void))
 (define g$num (void))
 (define g$WebFib (void))
 (define g$form (void))
 (define g$fib (void))
 (begin
   (set! len
     (lambda (seq14)
       (call/ec
        (lambda (return)
          (let ((cnt15 0))
            (begin
              (if (let ((t11 (py-list? seq14)))
                    (begin
                      (if t11
                        t11
                        (let ((t12 (set? seq14)))
                          (begin (if t12 t12 (tuple? seq14)))))))
                (let ((container16 (dict-ref seq14 "__containerdict__")))
                  (begin
                    (call/ec
                     (lambda (break)
                       ((lambda ($seq13 $loop14)
                          (begin
                            (begin (for-container $seq13 $loop14) (void))))
                        container16
                        (lambda (entry17)
                          (call/ec
                           (lambda (continue) (set! cnt15 (+ 1 cnt15))))))))
                    (return cnt15)))
                (cond
                 (else
                  (call/ec
                   (lambda (break)
                     ((lambda ($seq15 $loop16)
                        (begin (begin (for-container $seq15 $loop16) (void))))
                      seq14
                      (lambda (entry17)
                        (call/ec
                         (lambda (continue) (set! cnt15 (+ cnt15 1))))))))
                  (return cnt15))))))))))
   (set! object (lambda () (void)))
   (set! List
     (lambda (tmp-dict19)
       (call/ec
        (lambda (return)
          (let (($localo20
                 (dict ("__class__" List) ("__type__" "instPyList"))))
            (begin
              ((get-field $localo20 "__init__") tmp-dict19)
              (return $localo20)))))))
   (set! set
     (lambda (tmp-dict22)
       (call/ec
        (lambda (return)
          (let (($localo23 (dict ("__class__" set) ("__type__" "instSet"))))
            (begin
              ((get-field $localo23 "__init__") tmp-dict22)
              (return $localo23)))))))
   (set! tuple
     (lambda (tmp-dict25)
       (call/ec
        (lambda (return)
          (let (($localo26
                 (dict ("__class__" tuple) ("__type__" "instTuple"))))
            (begin
              ((get-field $localo26 "__init__") tmp-dict25)
              (return $localo26)))))))
   (set! gbl-dict (dict))
   (dict-set!
    gbl-dict
    object
    (dict
     ("__base__" (list))
     ("__mro__" (list object))
     ("__init__" (lambda v void))))
   (dict-set!
    gbl-dict
    List
    (dict
     ("__base__" (list object))
     ("__mro__" (list List object))
     ("__init__"
      (lambda (self27 tmpdict28)
        (call/ec
         (lambda (return)
           (if (py-list? tmpdict28)
             (set-field!
              self27
              "__containerdict__"
              (dict-ref tmpdict28 "__containerdict__"))
             (set-field! self27 "__containerdict__" tmpdict28))))))))
   (dict-set!
    gbl-dict
    set
    (dict
     ("__base__" (list object))
     ("__mro__" (list set object))
     ("__init__"
      (lambda (self29 tmpdict30)
        (call/ec
         (lambda (return)
           (if (py-list? tmpdict30)
             (set-field!
              self29
              "__containerdict__"
              (dict-ref tmpdict30 "__containerdict__"))
             (set-field! self29 "__containerdict__" tmpdict30))))))))
   (dict-set!
    gbl-dict
    tuple
    (dict
     ("__base__" (list object))
     ("__mro__" (list tuple object))
     ("__init__"
      (lambda (self31 tmp-dict32)
        (call/ec
         (lambda (return)
           (if (let ((t17 (py-list? tmp-dict32)))
                 (begin
                   (if t17
                     t17
                     (let ((t18 (tuple? tmp-dict32)))
                       (begin (if t18 t18 (set? tmp-dict32)))))))
             (set-field!
              self31
              "__containerdict__"
              (dict-ref tmp-dict32 "__containerdict__"))
             (set-field! self31 "__containerdict__" tmp-dict32))))))))
   ((lambda ()
      (begin
        (set! g$WebFib
          (lambda (n)
            (call/ec
             (lambda (return)
               (let (($localo11
                      (dict ("__class__" g$WebFib) ("__type__" "instWebFib"))))
                 (begin
                   ((get-field $localo11 "__init__") n)
                   (return $localo11)))))))
        (dict-set!
         gbl-dict
         g$WebFib
         (dict
          ("__base__" (list object))
          ("__class__" g$WebFib)
          ("__type__" "class")
          ("__init__"
           (lambda (self n)
             (call/ec
              (lambda (return)
                (begin (set-field! self "n" n) (set-field! self "res" 0))))))
          ("sanitizN"
           (lambda (self) (call/ec (lambda (return) (begin (void))))))
          ("do_fib"
           (lambda (self)
             (call/ec
              (lambda (return)
                (let ((tmp (void)))
                  (let ((a (void)))
                    (let ((b (void)))
                      (let ((i (void)))
                        (begin
                          (set! a 0)
                          (set! b 1)
                          (set! i 0)
                          (call/ec
                           (lambda (break)
                             (let ((loop (void)))
                               (begin
                                 (set! loop
                                   (lambda ()
                                     (if (< i (get-field self "n"))
                                       (begin
                                         (call/ec
                                          (lambda (continue)
                                            (begin
                                              (set! tmp a)
                                              (set! a b)
                                              (set! b (+ tmp b))
                                              (set! i (+ i 1)))))
                                         (loop))
                                       (void))))
                                 (loop)
                                 (void)))))
                          (set-field! self "res" a))))))))))))
        (dict-set!
         (dict-ref gbl-dict g$WebFib)
         "__mro__"
         (list g$WebFib object)))))
   (set! g$str_my
     (lambda (any_int)
       (call/ec
        (lambda (return)
          (begin (return (* (- any_int (- any_int 1)) "get-tainted")))))))
   (py-print
    "Content-type: text/html\r\n\r\n \n<html>\n<head>\n<title>Web Fibonacci</title> \n</head><body>\n<h1>Web Fibonacci Calcultor</h1> \n ")
   (set! g$form (dict ("terms" 10)))
   (set! g$num
     (let ((e12 g$form))
       (begin
         (let ((i13 "terms"))
           (begin
             (if (py-list? e12)
               (py-list-ref e12 i13)
               (if (tuple? e12)
                 (tuple-ref e12 i13)
                 (if (dict? e12)
                   (dict-ref e12 i13)
                   (error "cannot index object")))))))))
   (py-print
    (+
     (+
      "<form action = webfib.py method=GET> <p> <input type=\"text\" name = \"number\" value= "
      (g$str_my g$num))
     " size=3"))
   (set! g$fib (g$WebFib g$num))
   ((get-field g$fib "do_fib"))
   (py-print
    "<p><input type=\"submit\" value = \"GetResult\"> </form> <p><hr>")
   (py-print
    (+
     (+ "<p> result is " (g$str_my (get-field g$fib "res")))
     "<br> </body></html>"))
   (py-print (get-field g$fib "res"))))
