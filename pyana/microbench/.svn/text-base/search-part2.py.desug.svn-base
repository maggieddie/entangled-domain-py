(program
 (define break (void))
 (define return (void))
 (define continue (void))
 (define $current-handler (void))
 (define gbl-dict (void))
 (define object (void))
 (define List (void))
 (define set (void))
 (define tuple (void))
 (define len (void))
 (define g$srch2 (void))
 (define g$gen_malicious_input (void))
 (define g$test_init_input (void))
 (define g$Search (void))
 (define g$srch1 (void))
 (define g$mock_mal_strlst (void))
 (begin
   (set! len
     (lambda (seq16)
       (call/ec
        (lambda (return)
          (let ((cnt17 0))
            (begin
              (if (let ((t11 (py-list? seq16)))
                    (begin
                      (if t11
                        t11
                        (let ((t12 (set? seq16)))
                          (begin (if t12 t12 (tuple? seq16)))))))
                (let ((container18 (dict-ref seq16 "__containerdict__")))
                  (begin
                    (call/ec
                     (lambda (break)
                       ((lambda ($seq13 $loop14)
                          (begin
                            (begin (for-container $seq13 $loop14) (void))))
                        container18
                        (lambda (entry19)
                          (call/ec
                           (lambda (continue) (set! cnt17 (+ 1 cnt17))))))))
                    (return cnt17)))
                (cond
                 (else
                  (call/ec
                   (lambda (break)
                     ((lambda ($seq15 $loop16)
                        (begin (begin (for-container $seq15 $loop16) (void))))
                      seq16
                      (lambda (entry19)
                        (call/ec
                         (lambda (continue) (set! cnt17 (+ cnt17 1))))))))
                  (return cnt17))))))))))
   (set! object (lambda () (void)))
   (set! List
     (lambda (tmp-dict21)
       (call/ec
        (lambda (return)
          (let (($localo22
                 (dict ("__class__" List) ("__type__" "instPyList"))))
            (begin
              ((get-field $localo22 "__init__") tmp-dict21)
              (return $localo22)))))))
   (set! set
     (lambda (tmp-dict24)
       (call/ec
        (lambda (return)
          (let (($localo25 (dict ("__class__" set) ("__type__" "instSet"))))
            (begin
              ((get-field $localo25 "__init__") tmp-dict24)
              (return $localo25)))))))
   (set! tuple
     (lambda (tmp-dict27)
       (call/ec
        (lambda (return)
          (let (($localo28
                 (dict ("__class__" tuple) ("__type__" "instTuple"))))
            (begin
              ((get-field $localo28 "__init__") tmp-dict27)
              (return $localo28)))))))
   (set! gbl-dict (dict))
   (dict-set!
    gbl-dict
    object
    (dict
     ("__base__" (list))
     ("__mro__" (list object))
     ("__init__" (lambda v void))))
   (dict-set!
    gbl-dict
    List
    (dict
     ("__base__" (list object))
     ("__mro__" (list List object))
     ("__init__"
      (lambda (self29 tmpdict30)
        (call/ec
         (lambda (return)
           (if (py-list? tmpdict30)
             (set-field!
              self29
              "__containerdict__"
              (dict-ref tmpdict30 "__containerdict__"))
             (set-field! self29 "__containerdict__" tmpdict30))))))))
   (dict-set!
    gbl-dict
    set
    (dict
     ("__base__" (list object))
     ("__mro__" (list set object))
     ("__init__"
      (lambda (self31 tmpdict32)
        (call/ec
         (lambda (return)
           (if (py-list? tmpdict32)
             (set-field!
              self31
              "__containerdict__"
              (dict-ref tmpdict32 "__containerdict__"))
             (set-field! self31 "__containerdict__" tmpdict32))))))))
   (dict-set!
    gbl-dict
    tuple
    (dict
     ("__base__" (list object))
     ("__mro__" (list tuple object))
     ("__init__"
      (lambda (self33 tmp-dict34)
        (call/ec
         (lambda (return)
           (if (let ((t17 (py-list? tmp-dict34)))
                 (begin
                   (if t17
                     t17
                     (let ((t18 (tuple? tmp-dict34)))
                       (begin (if t18 t18 (set? tmp-dict34)))))))
             (set-field!
              self33
              "__containerdict__"
              (dict-ref tmp-dict34 "__containerdict__"))
             (set-field! self33 "__containerdict__" tmp-dict34))))))))
   ((lambda ()
      (begin
        (set! g$Search
          (lambda (input)
            (call/ec
             (lambda (return)
               (let (($localo11
                      (dict ("__class__" g$Search) ("__type__" "instSearch"))))
                 (begin
                   ((get-field $localo11 "__init__") input)
                   (return $localo11)))))))
        (dict-set!
         gbl-dict
         g$Search
         (dict
          ("__base__" (list object))
          ("__class__" g$Search)
          ("__type__" "class")
          ("__init__"
           (lambda (self input)
             (call/ec
              (lambda (return)
                (begin
                  (set-field! self "resp" (g$Response (g$Request input))))))))
          ("doSearch"
           (lambda (self)
             (call/ec
              (lambda (return)
                (let ((l (void)))
                  (begin
                    ((get-field
                      (get-field (get-field self "resp") "req")
                      "santinize_proc"))
                    (if (equal?
                         ((get-field
                           (get-field (get-field self "resp") "req")
                           "getData"))
                         (- 1))
                      (begin (py-print "no scripting allowed") (return (void)))
                      (void))
                    (set! l
                      (len
                       ((get-field
                         (get-field (get-field self "resp") "req")
                         "getData"))))
                    (if (> l 3)
                      (begin
                        (set-field!
                         (get-field self "resp")
                         "result"
                         (List (dict))))
                      (begin
                        (set-field!
                         (get-field self "resp")
                         "result"
                         (List
                          (dict
                           (0 (tuple (dict (0 "Colors") (1 "colors.html"))))
                           (1 (tuple (dict (0 "Numbers") (1 "numbers.html"))))
                           (2
                            (tuple
                             (dict
                              (0 "Numbers and Colors")
                              (1 "numbersandcolors.html"))))
                           (3
                            (tuple
                             (dict
                              (0 "Numbers and Colors With Tag")
                              (1 "numbersandcolorswithtag.html")))))))))
                    ((get-field (get-field self "resp") "gen_body"))))))))
          ("render"
           (lambda (self)
             (call/ec
              (lambda (return)
                (begin
                  (py-print (get-field (get-field self "resp") "body")))))))))
        (dict-set!
         (dict-ref gbl-dict g$Search)
         "__mro__"
         (list g$Search object)))))
   (set! g$test_init_input
     (lambda ()
       (call/ec
        (lambda (return)
          (let ((simulated_cgi_entry1 (void)))
            (begin
              (set! simulated_cgi_entry1
                (dict
                 ("terms" (List (dict (0 "red") (1 "blue") (2 "three"))))
                 ("boolean" g$OR)
                 ("case" g$CASE_SENSITIVE)
                 ("files"
                  (List
                   (dict
                    (0 "colors.html")
                    (1 "numbers.html")
                    (2 "numbersandcolors.html")
                    (3 "numbersandcolorswithtag.html"))))))
              (return
               (let ((e12 simulated_cgi_entry1))
                 (begin
                   (let ((i13 "terms"))
                     (begin
                       (if (py-list? e12)
                         (py-list-ref e12 i13)
                         (if (tuple? e12)
                           (tuple-ref e12 i13)
                           (if (dict? e12)
                             (dict-ref e12 i13)
                             (error "cannot index object")))))))))))))))
   (set! g$mock_mal_strlst
     (lambda ()
       (call/ec
        (lambda (return)
          (begin
            (return
             (List
              (dict
               (0 "e")
               (1 "<")
               (2 "s")
               (3 "c")
               (4 "r")
               (5 "i")
               (6 "p")
               (7 "t")
               (8 ">")))))))))
   (set! g$gen_malicious_input
     (lambda ()
       (call/ec
        (lambda (return)
          (let ((simulated_cgi_entry2 (void)))
            (begin
              (set! simulated_cgi_entry2 (dict ("terms" (g$mock_mal_strlst))))
              (return
               (let ((e14 simulated_cgi_entry2))
                 (begin
                   (let ((i15 "terms"))
                     (begin
                       (if (py-list? e14)
                         (py-list-ref e14 i15)
                         (if (tuple? e14)
                           (tuple-ref e14 i15)
                           (if (dict? e14)
                             (dict-ref e14 i15)
                             (error "cannot index object")))))))))))))))
   (set! g$srch1 (g$Search (g$test_init_input)))
   ((get-field g$srch1 "doSearch"))
   ((get-field g$srch1 "render"))
   (set! g$srch2 (g$Search (g$gen_malicious_input)))
   ((get-field g$srch2 "doSearch"))
   ((get-field g$srch2 "render"))))
