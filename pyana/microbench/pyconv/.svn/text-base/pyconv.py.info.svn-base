# States Explored = 160

cpu time: 72 real time: 72 gc time: 0

!!! Vulnerabilities #: 0 
 --------

 set: 
	#<Cls>
	(lambda (tmp-dict23) (call/ec (lambda (return) (let (($localo24 (dict (__class__ set) (__type__ instSet)))) (let ((b34 (get-field $localo24 __init__))) (let ((_35 (b34 tmp-dict23))) (let ((b36 (return $localo24))) b36)))))))

 len: 
	(lambda (seq15) (call/ec (lambda (return) (let ((cnt16 0)) (let ((t11 ((anf py-list?) seq15))) (let ((b1 (if t11 t11 (let ((t12 ((anf set?) seq15))) (let ((b2 (if t12 t12 ((anf tuple?) seq15)))) b2))))) (let ((b0 (if b1 (let ((container17 ((anf dict-ref) seq15 __containerdict__))) (let ((_10 (call/ec (lambda (break) (let ((b6 (lambda ($seq13 $loop14) (let ((_4 ((anf for-container) $seq13 $loop14))) (let ((b5 (void))) (let ((b3 b5)) b3)))))) (let ((b9 (lambda (entry18) (call/ec (lambda (continue) (let ((b7 ((anf +) 1 cnt16))) (let ((_8 (set! cnt16 b7))) (void)))))))) (b6 container17 b9))))))) (let ((b11 (return cnt16))) b11))) (let ((b19 (call/ec (lambda (break) (let ((b15 (lambda ($seq15 $loop16) (let ((_13 ((anf for-container) $seq15 $loop16))) (let ((b14 (void))) (let ((b12 b14)) b12)))))) (let ((b18 (lambda (entry18) (call/ec (lambda (continue) (let ((b16 ((anf +) cnt16 1))) (let ((_17 (set! cnt16 b16))) (void)))))))) (b15 seq15 b18))))))) (let ((b20 (return cnt16))) (let ((b21 (else b19 b20))) (cond b21))))))) b0)))))))

 object: 
	#<Cls>
	(lambda () (void))

 List: 
	#<Cls>
	(lambda (tmp-dict20) (call/ec (lambda (return) (let (($localo21 (dict (__class__ List) (__type__ instPyList)))) (let ((b28 (get-field $localo21 __init__))) (let ((_29 (b28 tmp-dict20))) (let ((b30 (return $localo21))) b30)))))))

 tuple: 
	#<Cls>
	(lambda (tmp-dict26) (call/ec (lambda (return) (let (($localo27 (dict (__class__ tuple) (__type__ instTuple)))) (let ((b40 (get-field $localo27 __init__))) (let ((_41 (b40 tmp-dict26))) (let ((b42 (return $localo27))) b42)))))))

 gbl-dict: 
	 inst 
		 fields and taints are: 
		 fields and values are: 

 g$temp_f2c: 
	(lambda (f) (call/ec (lambda (return) (let ((tc (void))) (let ((b83 ((anf -) f 32))) (let ((_84 (set! tc b83))) (let ((_85 (void))) (let ((b87 ((anf *) tc 5))) (let ((b88 ((anf /) b87 9))) (let ((b86 (return b88))) b86))))))))))

 g$temp_c2f: 
	(lambda (c) (call/ec (lambda (return) (let ((tf (void))) (let ((b92 ((anf /) c 5))) (let ((b93 ((anf *) b92 9))) (let ((_94 (set! tf b93))) (let ((_95 (void))) (let ((b97 ((anf +) tf 32))) (let ((b96 (return b97))) b96))))))))))

 g$converters: 
	 inst 
		 fields and taints are: 
			 "tempf2c" #<set: "untainted"> 
 			 "tempc2f" #<set: "untainted"> 
 		 fields and values are: 
			 "tempf2c" #<set: #(struct:closure (lambda (f) (call/ec (lambda (return) (let ((tc (void))) (let ((b83 ((anf -) f 32))) (let ((_84 (set! tc b83))) (let ((_85 (void))) (let ((b87 ((anf *) tc 5))) (let ((b88 ((anf /) b87 9))) (let ((b86 (return b88))) b86)))))))))) #hasheq((set . #(struct:BAddr set ())) (b22 . #(struct:BAddr b22 ())) (break . #(struct:BAddr break ())) (continue . #(struct:BAddr continue ())) (_23 . #(struct:BAddr _23 ())) (len . #(struct:BAddr len ())) (_24 . #(struct:BAddr _24 ())) (b25 . #(struct:BAddr b25 ())) (_26 . #(struct:BAddr _26 ())) (object . #(struct:BAddr object ())) (_27 . #(struct:BAddr _27 ())) (b31 . #(struct:BAddr b31 ())) (List . #(struct:BAddr List ())) (_32 . #(struct:BAddr _32 ())) (_33 . #(struct:BAddr _33 ())) (b37 . #(struct:BAddr b37 ())) (_38 . #(struct:BAddr _38 ())) (_39 . #(struct:BAddr _39 ())) (b43 . #(struct:BAddr b43 ())) (tuple . #(struct:BAddr tuple ())) (_44 . #(struct:BAddr _44 ())) (_45 . #(struct:BAddr _45 ())) (b46 . #(struct:BAddr b46 ())) (_47 . #(struct:BAddr _47 ())) (gbl-dict . #(struct:BAddr gbl-dict ())) (_48 . #(struct:BAddr _48 ())) (b49 . #(struct:BAddr b49 ())) (b50 . #(struct:BAddr b50 ())) (b51 . #(struct:BAddr b51 ())) (_52 . #(struct:BAddr _52 ())) (_53 . #(struct:BAddr _53 ())) (b54 . #(struct:BAddr b54 ())) (b55 . #(struct:BAddr b55 ())) (b58 . #(struct:BAddr b58 ())) (b62 . #(struct:BAddr b62 ())) (b63 . #(struct:BAddr b63 ())) (_64 . #(struct:BAddr _64 ())) (_65 . #(struct:BAddr _65 ())) (b66 . #(struct:BAddr b66 ())) (b67 . #(struct:BAddr b67 ())) (b70 . #(struct:BAddr b70 ())) (b71 . #(struct:BAddr b71 ())) (_72 . #(struct:BAddr _72 ())) (_73 . #(struct:BAddr _73 ())) (b74 . #(struct:BAddr b74 ())) (b75 . #(struct:BAddr b75 ())) (b79 . #(struct:BAddr b79 ())) (b80 . #(struct:BAddr b80 ())) (_81 . #(struct:BAddr _81 ())) (_82 . #(struct:BAddr _82 ())) (g$temp_f2c . #(struct:BAddr g$temp_f2c ())) (g$temp_c2f . #(struct:BAddr g$temp_c2f ())) (g$converters . #(struct:BAddr g$converters ())) (g$srctemp . #(struct:BAddr g$srctemp ())) (g$dsttemp . #(struct:BAddr g$dsttemp ())) (g$action . #(struct:BAddr g$action ())) (g$cgi . #(struct:BAddr g$cgi ())) (g$str_my . #(struct:BAddr g$str_my ())) ($current-handler . #(struct:BAddr $current-handler ())) (return . #(struct:BAddr return ()))))> 
 			 "tempc2f" #<set: #(struct:closure (lambda (c) (call/ec (lambda (return) (let ((tf (void))) (let ((b92 ((anf /) c 5))) (let ((b93 ((anf *) b92 9))) (let ((_94 (set! tf b93))) (let ((_95 (void))) (let ((b97 ((anf +) tf 32))) (let ((b96 (return b97))) b96)))))))))) #hasheq((set . #(struct:BAddr set ())) (b22 . #(struct:BAddr b22 ())) (break . #(struct:BAddr break ())) (continue . #(struct:BAddr continue ())) (_23 . #(struct:BAddr _23 ())) (len . #(struct:BAddr len ())) (_24 . #(struct:BAddr _24 ())) (b25 . #(struct:BAddr b25 ())) (_26 . #(struct:BAddr _26 ())) (object . #(struct:BAddr object ())) (_27 . #(struct:BAddr _27 ())) (b31 . #(struct:BAddr b31 ())) (List . #(struct:BAddr List ())) (_32 . #(struct:BAddr _32 ())) (_33 . #(struct:BAddr _33 ())) (b37 . #(struct:BAddr b37 ())) (_38 . #(struct:BAddr _38 ())) (_39 . #(struct:BAddr _39 ())) (b43 . #(struct:BAddr b43 ())) (tuple . #(struct:BAddr tuple ())) (_44 . #(struct:BAddr _44 ())) (_45 . #(struct:BAddr _45 ())) (b46 . #(struct:BAddr b46 ())) (_47 . #(struct:BAddr _47 ())) (gbl-dict . #(struct:BAddr gbl-dict ())) (_48 . #(struct:BAddr _48 ())) (b49 . #(struct:BAddr b49 ())) (b50 . #(struct:BAddr b50 ())) (b51 . #(struct:BAddr b51 ())) (_52 . #(struct:BAddr _52 ())) (_53 . #(struct:BAddr _53 ())) (b54 . #(struct:BAddr b54 ())) (b55 . #(struct:BAddr b55 ())) (b58 . #(struct:BAddr b58 ())) (b62 . #(struct:BAddr b62 ())) (b63 . #(struct:BAddr b63 ())) (_64 . #(struct:BAddr _64 ())) (_65 . #(struct:BAddr _65 ())) (b66 . #(struct:BAddr b66 ())) (b67 . #(struct:BAddr b67 ())) (b70 . #(struct:BAddr b70 ())) (b71 . #(struct:BAddr b71 ())) (_72 . #(struct:BAddr _72 ())) (_73 . #(struct:BAddr _73 ())) (b74 . #(struct:BAddr b74 ())) (b75 . #(struct:BAddr b75 ())) (b79 . #(struct:BAddr b79 ())) (b80 . #(struct:BAddr b80 ())) (_81 . #(struct:BAddr _81 ())) (_82 . #(struct:BAddr _82 ())) (b89 . #(struct:BAddr b89 ())) (_90 . #(struct:BAddr _90 ())) (g$temp_f2c . #(struct:BAddr g$temp_f2c ())) (_91 . #(struct:BAddr _91 ())) (g$temp_c2f . #(struct:BAddr g$temp_c2f ())) (g$converters . #(struct:BAddr g$converters ())) (g$srctemp . #(struct:BAddr g$srctemp ())) (g$dsttemp . #(struct:BAddr g$dsttemp ())) (g$action . #(struct:BAddr g$action ())) (g$cgi . #(struct:BAddr g$cgi ())) (g$str_my . #(struct:BAddr g$str_my ())) ($current-handler . #(struct:BAddr $current-handler ())) (return . #(struct:BAddr return ()))))> 
 
 g$srctemp: 
	0

 g$dsttemp: 
	0

 g$action: 
	tempf2c
	tempc2fc

 g$cgi: 
	 inst 
		 fields and taints are: 
			 "terms" #<set: "tainted"> 
 		 fields and values are: 
			 "terms" #<set: "tempc2fc"> 
 
 g$str_my: 
# of terms: 14 
# of singleton set of terms: 8 
% of singleton set in all terms: 4/7 
# of inst: 3 
: 