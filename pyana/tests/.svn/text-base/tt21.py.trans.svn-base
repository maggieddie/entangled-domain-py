(program
 (define gbl-dict (void))
 (define object (void))
 (define List (void))
 (define set (void))
 (define tuple (void))
 (define y (void))
 (define x (void))
 (define y2 (void))
 (set-global! object (lambda () (void)))
 (set-global!
  List
  (lambda (tmp-dict13)
    (call/ec
     (lambda (return)
       (let (($localo14
              (dict
               ("__class__" (get-global List))
               ("__type__" "instPyList"))))
         ((get-field $localo14 "__init__") tmp-dict13)
         (return $localo14))))))
 (set-global!
  set
  (lambda (tmp-dict16)
    (call/ec
     (lambda (return)
       (let (($localo17
              (dict ("__class__" (get-global set)) ("__type__" "instSet"))))
         ((get-field $localo17 "__init__") tmp-dict16)
         (return $localo17))))))
 (set-global!
  tuple
  (lambda (tmp-dict19)
    (call/ec
     (lambda (return)
       (let (($localo20
              (dict
               ("__class__" (get-global tuple))
               ("__type__" "instTuple"))))
         ((get-field $localo20 "__init__") tmp-dict19)
         (return $localo20))))))
 (set-global! gbl-dict (dict))
 (dict-set!
  gbl-dict
  object
  (dict
   ("__base__" (list))
   ("__mro__" (list object))
   ("__init__" (lambda v void))))
 (dict-set!
  gbl-dict
  List
  (dict
   ("__base__" (list object))
   ("__mro__" (list List object))
   ("__init__"
    (lambda (self21 tmpdict22)
      (call/ec
       (lambda (return)
         (if (py-list? tmpdict22)
           (set-field!
            self21
            "__containerdict__"
            (dict-ref tmpdict22 "__containerdict__"))
           (set-field! self21 "__containerdict__" tmpdict22))))))))
 (dict-set!
  gbl-dict
  set
  (dict
   ("__base__" (list object))
   ("__mro__" (list set object))
   ("__init__"
    (lambda (self23 tmpdict24)
      (call/ec
       (lambda (return)
         (if (py-list? tmpdict24)
           (set-field!
            self23
            "__containerdict__"
            (dict-ref tmpdict24 "__containerdict__"))
           (set-field! self23 "__containerdict__" tmpdict24))))))))
 (dict-set!
  gbl-dict
  tuple
  (dict
   ("__base__" (list object))
   ("__mro__" (list tuple object))
   ("__init__"
    (lambda (self25 tmp-dict26)
      (call/ec
       (lambda (return)
         (if (or (py-list? tmp-dict26) (tuple? tmp-dict26) (set? tmp-dict26))
           (set-field!
            self25
            "__containerdict__"
            (dict-ref tmp-dict26 "__containerdict__"))
           (set-field! self25 "__containerdict__" tmp-dict26))))))))
 (set-global! y 2)
 (set-global! y2 ((get-global List) (dict (0 "Hi") (1 2) (2 3))))
 (for-each
  i11
  (get-global y2)
  (begin
    (set-global! x i11)
    (let ()
      (py-print (get-global x))
      (set-global! y (* (get-global x) (get-global y)))))))
