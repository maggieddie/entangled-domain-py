(program
 (define gbl-dict (void))
 (define object (void))
 (define List (void))
 (define set (void))
 (define tuple (void))
 (define len (void))
 (define l2 (void))
 (define l (void))
 (define e (void))
 (set-global!
  len
  (lambda (seq12)
    (call/ec
     (lambda (return)
       (let ((cnt13 0))
         (cond
          ((or (py-list? seq12) (set? seq12) (tuple? seq12))
           (let ((container14 (dict-ref seq12 "__containerdict__")))
             (for-each entry15 container14 (set! cnt13 (+ 1 cnt13)))
             (return cnt13)))
          (else
           (for-each entry15 seq12 (set! cnt13 (+ cnt13 1)))
           (return cnt13))))))))
 (set-global! object (lambda () (void)))
 (set-global!
  List
  (lambda (tmp-dict17)
    (call/ec
     (lambda (return)
       (let (($localo18
              (dict
               ("__class__" (get-global List))
               ("__type__" "instPyList"))))
         ((get-field $localo18 "__init__") tmp-dict17)
         (return $localo18))))))
 (set-global!
  set
  (lambda (tmp-dict20)
    (call/ec
     (lambda (return)
       (let (($localo21
              (dict ("__class__" (get-global set)) ("__type__" "instSet"))))
         ((get-field $localo21 "__init__") tmp-dict20)
         (return $localo21))))))
 (set-global!
  tuple
  (lambda (tmp-dict23)
    (call/ec
     (lambda (return)
       (let (($localo24
              (dict
               ("__class__" (get-global tuple))
               ("__type__" "instTuple"))))
         ((get-field $localo24 "__init__") tmp-dict23)
         (return $localo24))))))
 (set-global! gbl-dict (dict))
 (dict-set!
  gbl-dict
  object
  (dict
   ("__base__" (list))
   ("__mro__" (list object))
   ("__init__" (lambda v void))))
 (dict-set!
  gbl-dict
  List
  (dict
   ("__base__" (list object))
   ("__mro__" (list List object))
   ("__init__"
    (lambda (self25 tmpdict26)
      (call/ec
       (lambda (return)
         (if (py-list? tmpdict26)
           (set-field!
            self25
            "__containerdict__"
            (dict-ref tmpdict26 "__containerdict__"))
           (set-field! self25 "__containerdict__" tmpdict26))))))
   ("append"
    (lambda (self27 elem28)
      (let ((max29 (len self27)))
        (dict-set! (dict-ref self27 "__containerdict__") max29 elem28))))))
 (dict-set!
  gbl-dict
  set
  (dict
   ("__base__" (list object))
   ("__mro__" (list set object))
   ("__init__"
    (lambda (self30 tmpdict31)
      (call/ec
       (lambda (return)
         (if (py-list? tmpdict31)
           (set-field!
            self30
            "__containerdict__"
            (dict-ref tmpdict31 "__containerdict__"))
           (set-field! self30 "__containerdict__" tmpdict31))))))))
 (dict-set!
  gbl-dict
  tuple
  (dict
   ("__base__" (list object))
   ("__mro__" (list tuple object))
   ("__init__"
    (lambda (self32 tmp-dict33)
      (call/ec
       (lambda (return)
         (if (or (py-list? tmp-dict33) (tuple? tmp-dict33) (set? tmp-dict33))
           (set-field!
            self32
            "__containerdict__"
            (dict-ref tmp-dict33 "__containerdict__"))
           (set-field! self32 "__containerdict__" tmp-dict33))))))))
 (set-global! l ((get-global List) (dict (0 20) (1 10))))
 (set-global! l2 ((get-global List) (dict)))
 (for-each
  i11
  (get-global l)
  (begin
    (set-global! e i11)
    (let () ((get-field (get-global l2) "append") (* (get-global e) 100)))))
 (py-print (get-global l2)))
