(program
 (define break (void))
 (define return (void))
 (define continue (void))
 (define $current-handler (void))
 (define gbl-dict (void))
 (define object (void))
 (define List (void))
 (define set (void))
 (define tuple (void))
 (define g$foo (void))
 (define g$a (void))
 (define g$bar (void))
 (begin
   (set! object (lambda () (void)))
   (set! List
     (lambda (tmp-dict16)
       (call/ec
        (lambda (return)
          (let (($localo17
                 (dict ("__class__" List) ("__type__" "instPyList"))))
            (begin
              ((get-field $localo17 "__init__") tmp-dict16)
              (return $localo17)))))))
   (set! set
     (lambda (tmp-dict19)
       (call/ec
        (lambda (return)
          (let (($localo20 (dict ("__class__" set) ("__type__" "instSet"))))
            (begin
              ((get-field $localo20 "__init__") tmp-dict19)
              (return $localo20)))))))
   (set! tuple
     (lambda (tmp-dict22)
       (call/ec
        (lambda (return)
          (let (($localo23
                 (dict ("__class__" tuple) ("__type__" "instTuple"))))
            (begin
              ((get-field $localo23 "__init__") tmp-dict22)
              (return $localo23)))))))
   (set! gbl-dict (dict))
   (dict-set!
    gbl-dict
    object
    (dict
     ("__base__" (list))
     ("__mro__" (list object))
     ("__init__" (lambda v void))))
   (dict-set!
    gbl-dict
    List
    (dict
     ("__base__" (list object))
     ("__mro__" (list List object))
     ("__init__"
      (lambda (self24 tmpdict25)
        (call/ec
         (lambda (return)
           (if (py-list? tmpdict25)
             (set-field!
              self24
              "__containerdict__"
              (dict-ref tmpdict25 "__containerdict__"))
             (set-field! self24 "__containerdict__" tmpdict25))))))))
   (dict-set!
    gbl-dict
    set
    (dict
     ("__base__" (list object))
     ("__mro__" (list set object))
     ("__init__"
      (lambda (self26 tmpdict27)
        (call/ec
         (lambda (return)
           (if (py-list? tmpdict27)
             (set-field!
              self26
              "__containerdict__"
              (dict-ref tmpdict27 "__containerdict__"))
             (set-field! self26 "__containerdict__" tmpdict27))))))))
   (dict-set!
    gbl-dict
    tuple
    (dict
     ("__base__" (list object))
     ("__mro__" (list tuple object))
     ("__init__"
      (lambda (self28 tmp-dict29)
        (call/ec
         (lambda (return)
           (if (let ((t11 (py-list? tmp-dict29)))
                 (begin
                   (if t11
                     t11
                     (let ((t12 (tuple? tmp-dict29)))
                       (begin (if t12 t12 (set? tmp-dict29)))))))
             (set-field!
              self28
              "__containerdict__"
              (dict-ref tmp-dict29 "__containerdict__"))
             (set-field! self28 "__containerdict__" tmp-dict29))))))))
   (set! g$foo
     (lambda ()
       (call/ec
        (lambda (return)
          (begin (return (dict ("a" 1) ("b" "horray!") ("c" 3))))))))
   (set! g$bar
     (lambda ()
       (call/ec
        (lambda (return) (begin (return (tuple (dict (0 (g$foo)) (1 1)))))))))
   (set! g$a
     (let ((e13
            (let ((e11 (g$bar)))
              (begin
                (let ((i12 0))
                  (begin
                    (if (py-list? e11)
                      (py-list-ref e11 i12)
                      (if (tuple? e11)
                        (tuple-ref e11 i12)
                        (if (dict? e11)
                          (dict-ref e11 i12)
                          (error "cannot index object"))))))))))
       (begin
         (let ((i14 "b"))
           (begin
             (if (py-list? e13)
               (py-list-ref e13 i14)
               (if (tuple? e13)
                 (tuple-ref e13 i14)
                 (if (dict? e13)
                   (dict-ref e13 i14)
                   (error "cannot index object")))))))))))
