(program
 (define break (void))
 (define return (void))
 (define continue (void))
 (define $current-handler (void))
 (define gbl-dict (void))
 (define object (void))
 (define List (void))
 (define set (void))
 (define tuple (void))
 (define g$lst (void))
 (define g$tl (void))
 (begin
   (set! object (lambda () (void)))
   (set! List
     (lambda (tmp-dict20)
       (call/ec
        (lambda (return)
          (let (($localo21
                 (dict ("__class__" List) ("__type__" "instPyList"))))
            (begin
              ((get-field $localo21 "__init__") tmp-dict20)
              (return $localo21)))))))
   (set! set
     (lambda (tmp-dict23)
       (call/ec
        (lambda (return)
          (let (($localo24 (dict ("__class__" set) ("__type__" "instSet"))))
            (begin
              ((get-field $localo24 "__init__") tmp-dict23)
              (return $localo24)))))))
   (set! tuple
     (lambda (tmp-dict26)
       (call/ec
        (lambda (return)
          (let (($localo27
                 (dict ("__class__" tuple) ("__type__" "instTuple"))))
            (begin
              ((get-field $localo27 "__init__") tmp-dict26)
              (return $localo27)))))))
   (set! gbl-dict (dict))
   (dict-set!
    gbl-dict
    object
    (dict
     ("__base__" (list))
     ("__mro__" (list object))
     ("__init__" (lambda v void))))
   (dict-set!
    gbl-dict
    List
    (dict
     ("__base__" (list object))
     ("__mro__" (list List object))
     ("__init__"
      (lambda (self28 tmpdict29)
        (call/ec
         (lambda (return)
           (if (py-list? tmpdict29)
             (set-field!
              self28
              "__containerdict__"
              (dict-ref tmpdict29 "__containerdict__"))
             (set-field! self28 "__containerdict__" tmpdict29))))))))
   (dict-set!
    gbl-dict
    set
    (dict
     ("__base__" (list object))
     ("__mro__" (list set object))
     ("__init__"
      (lambda (self30 tmpdict31)
        (call/ec
         (lambda (return)
           (if (py-list? tmpdict31)
             (set-field!
              self30
              "__containerdict__"
              (dict-ref tmpdict31 "__containerdict__"))
             (set-field! self30 "__containerdict__" tmpdict31))))))))
   (dict-set!
    gbl-dict
    tuple
    (dict
     ("__base__" (list object))
     ("__mro__" (list tuple object))
     ("__init__"
      (lambda (self32 tmp-dict33)
        (call/ec
         (lambda (return)
           (if (let ((t11 (py-list? tmp-dict33)))
                 (begin
                   (if t11
                     t11
                     (let ((t12 (tuple? tmp-dict33)))
                       (begin (if t12 t12 (set? tmp-dict33)))))))
             (set-field!
              self32
              "__containerdict__"
              (dict-ref tmp-dict33 "__containerdict__"))
             (set-field! self32 "__containerdict__" tmp-dict33))))))))
   (set! g$lst (List (dict (0 1) (1 3) (2 5))))
   (let ((b11 g$lst))
     (begin
       (let ((i12 0))
         (begin
           (if (py-list? b11)
             (py-list-set! b11 i12 "str")
             (if (dict? b11) (dict-set! b11 i12 "str") (void)))))))
   (py-print g$lst)
   (let ((b13 g$lst))
     (begin
       (let ((i14 1))
         (begin
           (if (py-list? b13)
             (py-list-set! b13 i14 (tuple (dict (0 2) (1 4))))
             (if (dict? b13)
               (dict-set! b13 i14 (tuple (dict (0 2) (1 4))))
               (void)))))))
   (py-print g$lst)
   (set! g$tl
     (let ((e17
            (let ((e15 g$lst))
              (begin
                (let ((i16 1))
                  (begin
                    (if (py-list? e15)
                      (py-list-ref e15 i16)
                      (if (tuple? e15)
                        (tuple-ref e15 i16)
                        (if (dict? e15)
                          (dict-ref e15 i16)
                          (error "cannot index object"))))))))))
       (begin
         (let ((i18 1))
           (begin
             (if (py-list? e17)
               (py-list-ref e17 i18)
               (if (tuple? e17)
                 (tuple-ref e17 i18)
                 (if (dict? e17)
                   (dict-ref e17 i18)
                   (error "cannot index object")))))))))
   (py-print g$tl)))
