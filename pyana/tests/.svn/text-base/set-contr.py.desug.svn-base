(program
 (define break (void))
 (define return (void))
 (define continue (void))
 (define $current-handler (void))
 (define gbl-dict (void))
 (define object (void))
 (define List (void))
 (define set (void))
 (define tuple (void))
 (define len (void))
 (define g$s2 (void))
 (define g$l (void))
 (define g$d2 (void))
 (begin
   (set! len
     (lambda (seq11)
       (call/ec
        (lambda (return)
          (let ((cnt12 0))
            (begin
              (if (let ((t11 (py-list? seq11)))
                    (begin
                      (if t11
                        t11
                        (let ((t12 (set? seq11)))
                          (begin (if t12 t12 (tuple? seq11)))))))
                (let ((container13 (dict-ref seq11 "__containerdict__")))
                  (begin
                    (call/ec
                     (lambda (break)
                       ((lambda ($seq13 $loop14)
                          (begin
                            (begin (for-container $seq13 $loop14) (void))))
                        container13
                        (lambda (entry14)
                          (call/ec
                           (lambda (continue) (set! cnt12 (+ 1 cnt12))))))))
                    (return cnt12)))
                (cond
                 (else
                  (call/ec
                   (lambda (break)
                     ((lambda ($seq15 $loop16)
                        (begin (begin (for-container $seq15 $loop16) (void))))
                      seq11
                      (lambda (entry14)
                        (call/ec
                         (lambda (continue) (set! cnt12 (+ cnt12 1))))))))
                  (return cnt12))))))))))
   (set! object (lambda () (void)))
   (set! List
     (lambda (tmp-dict16)
       (call/ec
        (lambda (return)
          (let (($localo17
                 (dict ("__class__" List) ("__type__" "instPyList"))))
            (begin
              ((get-field $localo17 "__init__") tmp-dict16)
              (return $localo17)))))))
   (set! set
     (lambda (tmp-dict19)
       (call/ec
        (lambda (return)
          (let (($localo20 (dict ("__class__" set) ("__type__" "instSet"))))
            (begin
              ((get-field $localo20 "__init__") tmp-dict19)
              (return $localo20)))))))
   (set! tuple
     (lambda (tmp-dict22)
       (call/ec
        (lambda (return)
          (let (($localo23
                 (dict ("__class__" tuple) ("__type__" "instTuple"))))
            (begin
              ((get-field $localo23 "__init__") tmp-dict22)
              (return $localo23)))))))
   (set! gbl-dict (dict))
   (dict-set!
    gbl-dict
    object
    (dict
     ("__base__" (list))
     ("__mro__" (list object))
     ("__init__" (lambda v void))))
   (dict-set!
    gbl-dict
    List
    (dict
     ("__base__" (list object))
     ("__mro__" (list List object))
     ("__init__"
      (lambda (self24 tmpdict25)
        (call/ec
         (lambda (return)
           (if (py-list? tmpdict25)
             (set-field!
              self24
              "__containerdict__"
              (dict-ref tmpdict25 "__containerdict__"))
             (set-field! self24 "__containerdict__" tmpdict25))))))
     ("append"
      (lambda (self26 elem27)
        (let ((max28 (len self26)))
          (begin
            (dict-set!
             (dict-ref self26 "__containerdict__")
             max28
             elem27)))))))
   (dict-set!
    gbl-dict
    set
    (dict
     ("__base__" (list object))
     ("__mro__" (list set object))
     ("__init__"
      (lambda (self29 tmpdict30)
        (call/ec
         (lambda (return)
           (if (py-list? tmpdict30)
             (set-field!
              self29
              "__containerdict__"
              (dict-ref tmpdict30 "__containerdict__"))
             (set-field! self29 "__containerdict__" tmpdict30))))))))
   (dict-set!
    gbl-dict
    tuple
    (dict
     ("__base__" (list object))
     ("__mro__" (list tuple object))
     ("__init__"
      (lambda (self31 tmp-dict32)
        (call/ec
         (lambda (return)
           (if (let ((t17 (py-list? tmp-dict32)))
                 (begin
                   (if t17
                     t17
                     (let ((t18 (tuple? tmp-dict32)))
                       (begin (if t18 t18 (set? tmp-dict32)))))))
             (set-field!
              self31
              "__containerdict__"
              (dict-ref tmp-dict32 "__containerdict__"))
             (set-field! self31 "__containerdict__" tmp-dict32))))))))
   (set! g$l (g$list))
   ((get-field g$l "append") 100)
   (set! g$s2 (set g$l))
   (set! g$d2 (dict))
   (py-print g$s)
   (py-print g$s2)
   (py-print g$l)
   (py-print g$d2)))
