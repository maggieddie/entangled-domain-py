(program
 (define gbl-dict (void))
 (define object (void))
 (define List (void))
 (define set (void))
 (define tuple (void))
 (define lst (void))
 (define tl (void))
 (set-global! object (lambda () (void)))
 (set-global!
  List
  (lambda (tmp-dict20)
    (call/ec
     (lambda (return)
       (let (($localo21
              (dict
               ("__class__" (get-global List))
               ("__type__" "instPyList"))))
         ((get-field $localo21 "__init__") tmp-dict20)
         (return $localo21))))))
 (set-global!
  set
  (lambda (tmp-dict23)
    (call/ec
     (lambda (return)
       (let (($localo24
              (dict ("__class__" (get-global set)) ("__type__" "instSet"))))
         ((get-field $localo24 "__init__") tmp-dict23)
         (return $localo24))))))
 (set-global!
  tuple
  (lambda (tmp-dict26)
    (call/ec
     (lambda (return)
       (let (($localo27
              (dict
               ("__class__" (get-global tuple))
               ("__type__" "instTuple"))))
         ((get-field $localo27 "__init__") tmp-dict26)
         (return $localo27))))))
 (set-global! gbl-dict (dict))
 (dict-set!
  gbl-dict
  object
  (dict
   ("__base__" (list))
   ("__mro__" (list object))
   ("__init__" (lambda v void))))
 (dict-set!
  gbl-dict
  List
  (dict
   ("__base__" (list object))
   ("__mro__" (list List object))
   ("__init__"
    (lambda (self28 tmpdict29)
      (call/ec
       (lambda (return)
         (if (py-list? tmpdict29)
           (set-field!
            self28
            "__containerdict__"
            (dict-ref tmpdict29 "__containerdict__"))
           (set-field! self28 "__containerdict__" tmpdict29))))))))
 (dict-set!
  gbl-dict
  set
  (dict
   ("__base__" (list object))
   ("__mro__" (list set object))
   ("__init__"
    (lambda (self30 tmpdict31)
      (call/ec
       (lambda (return)
         (if (py-list? tmpdict31)
           (set-field!
            self30
            "__containerdict__"
            (dict-ref tmpdict31 "__containerdict__"))
           (set-field! self30 "__containerdict__" tmpdict31))))))))
 (dict-set!
  gbl-dict
  tuple
  (dict
   ("__base__" (list object))
   ("__mro__" (list tuple object))
   ("__init__"
    (lambda (self32 tmp-dict33)
      (call/ec
       (lambda (return)
         (if (or (py-list? tmp-dict33) (tuple? tmp-dict33) (set? tmp-dict33))
           (set-field!
            self32
            "__containerdict__"
            (dict-ref tmp-dict33 "__containerdict__"))
           (set-field! self32 "__containerdict__" tmp-dict33))))))))
 (set-global! lst ((get-global List) (dict (0 1) (1 3) (2 5))))
 (let ((b11 (get-global lst)))
   (let ((i12 0))
     (cond
      ((py-list? b11) (py-list-set! b11 i12 "str"))
      ((dict? b11) (dict-set! b11 i12 "str")))))
 (py-print (get-global lst))
 (let ((b13 (get-global lst)))
   (let ((i14 1))
     (cond
      ((py-list? b13)
       (py-list-set! b13 i14 ((get-global tuple) (dict (0 2) (1 4)))))
      ((dict? b13)
       (dict-set! b13 i14 ((get-global tuple) (dict (0 2) (1 4))))))))
 (py-print (get-global lst))
 (set-global!
  tl
  (let ((e17
         (let ((e15 (get-global lst)))
           (let ((i16 1))
             (cond
              ((py-list? e15) (py-list-ref e15 i16))
              ((tuple? e15) (tuple-ref e15 i16))
              ((dict? e15) (dict-ref e15 i16))
              (else (error "cannot index object")))))))
    (let ((i18 1))
      (cond
       ((py-list? e17) (py-list-ref e17 i18))
       ((tuple? e17) (tuple-ref e17 i18))
       ((dict? e17) (dict-ref e17 i18))
       (else (error "cannot index object"))))))
 (py-print (get-global tl)))
