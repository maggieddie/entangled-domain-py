(program
 (define break (void))
 (define return (void))
 (define continue (void))
 (define $current-handler (void))
 (define gbl-dict (void))
 (define object (void))
 (define List (void))
 (define set (void))
 (define tuple (void))
 (define g$b (void))
 (define g$c (void))
 (define g$d (void))
 (define g$a (void))
 (begin
   (set! object (lambda () (void)))
   (set! List
     (lambda (tmp-dict18)
       (call/ec
        (lambda (return)
          (let (($localo19
                 (dict ("__class__" List) ("__type__" "instPyList"))))
            (begin
              ((get-field $localo19 "__init__") tmp-dict18)
              (return $localo19)))))))
   (set! set
     (lambda (tmp-dict21)
       (call/ec
        (lambda (return)
          (let (($localo22 (dict ("__class__" set) ("__type__" "instSet"))))
            (begin
              ((get-field $localo22 "__init__") tmp-dict21)
              (return $localo22)))))))
   (set! tuple
     (lambda (tmp-dict24)
       (call/ec
        (lambda (return)
          (let (($localo25
                 (dict ("__class__" tuple) ("__type__" "instTuple"))))
            (begin
              ((get-field $localo25 "__init__") tmp-dict24)
              (return $localo25)))))))
   (set! gbl-dict (dict))
   (dict-set!
    gbl-dict
    object
    (dict
     ("__base__" (list))
     ("__mro__" (list object))
     ("__init__" (lambda v void))))
   (dict-set!
    gbl-dict
    List
    (dict
     ("__base__" (list object))
     ("__mro__" (list List object))
     ("__init__"
      (lambda (self26 tmpdict27)
        (call/ec
         (lambda (return)
           (if (py-list? tmpdict27)
             (set-field!
              self26
              "__containerdict__"
              (dict-ref tmpdict27 "__containerdict__"))
             (set-field! self26 "__containerdict__" tmpdict27))))))))
   (dict-set!
    gbl-dict
    set
    (dict
     ("__base__" (list object))
     ("__mro__" (list set object))
     ("__init__"
      (lambda (self28 tmpdict29)
        (call/ec
         (lambda (return)
           (if (py-list? tmpdict29)
             (set-field!
              self28
              "__containerdict__"
              (dict-ref tmpdict29 "__containerdict__"))
             (set-field! self28 "__containerdict__" tmpdict29))))))))
   (dict-set!
    gbl-dict
    tuple
    (dict
     ("__base__" (list object))
     ("__mro__" (list tuple object))
     ("__init__"
      (lambda (self30 tmp-dict31)
        (call/ec
         (lambda (return)
           (if (let ((t11 (py-list? tmp-dict31)))
                 (begin
                   (if t11
                     t11
                     (let ((t12 (tuple? tmp-dict31)))
                       (begin (if t12 t12 (set? tmp-dict31)))))))
             (set-field!
              self30
              "__containerdict__"
              (dict-ref tmp-dict31 "__containerdict__"))
             (set-field! self30 "__containerdict__" tmp-dict31))))))))
   (set! g$a
     (List
      (dict (0 (List (dict (0 (tuple (dict (0 "0") (1 1)))) (1 2)))) (1 3))))
   (set! g$b
     (let ((e11 g$a))
       (begin
         (let ((i12 0))
           (begin
             (if (py-list? e11)
               (py-list-ref e11 i12)
               (if (tuple? e11)
                 (tuple-ref e11 i12)
                 (if (dict? e11)
                   (dict-ref e11 i12)
                   (error "cannot index object")))))))))
   (set! g$c
     (let ((e13 g$b))
       (begin
         (let ((i14 0))
           (begin
             (if (py-list? e13)
               (py-list-ref e13 i14)
               (if (tuple? e13)
                 (tuple-ref e13 i14)
                 (if (dict? e13)
                   (dict-ref e13 i14)
                   (error "cannot index object")))))))))
   (set! g$d
     (let ((e15 g$c))
       (begin
         (let ((i16 0))
           (begin
             (if (py-list? e15)
               (py-list-ref e15 i16)
               (if (tuple? e15)
                 (tuple-ref e15 i16)
                 (if (dict? e15)
                   (dict-ref e15 i16)
                   (error "cannot index object")))))))))))
