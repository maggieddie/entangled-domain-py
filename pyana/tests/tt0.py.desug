(program
 (define break (void))
 (define return (void))
 (define continue (void))
 (define $current-handler (void))
 (define gbl-dict (void))
 (define object (void))
 (define List (void))
 (define set (void))
 (define tuple (void))
 (define g$foo (void))
 (define g$b (void))
 (begin
   (set! object (lambda () (void)))
   (set! List
     (lambda (tmp-dict14)
       (call/ec
        (lambda (return)
          (let (($localo15
                 (dict ("__class__" List) ("__type__" "instPyList"))))
            (begin
              ((get-field $localo15 "__init__") tmp-dict14)
              (return $localo15)))))))
   (set! set
     (lambda (tmp-dict17)
       (call/ec
        (lambda (return)
          (let (($localo18 (dict ("__class__" set) ("__type__" "instSet"))))
            (begin
              ((get-field $localo18 "__init__") tmp-dict17)
              (return $localo18)))))))
   (set! tuple
     (lambda (tmp-dict20)
       (call/ec
        (lambda (return)
          (let (($localo21
                 (dict ("__class__" tuple) ("__type__" "instTuple"))))
            (begin
              ((get-field $localo21 "__init__") tmp-dict20)
              (return $localo21)))))))
   (set! gbl-dict (dict))
   (dict-set!
    gbl-dict
    object
    (dict
     ("__base__" (list))
     ("__mro__" (list object))
     ("__init__" (lambda v void))))
   (dict-set!
    gbl-dict
    List
    (dict
     ("__base__" (list object))
     ("__mro__" (list List object))
     ("__init__"
      (lambda (self22 tmpdict23)
        (call/ec
         (lambda (return)
           (if (py-list? tmpdict23)
             (set-field!
              self22
              "__containerdict__"
              (dict-ref tmpdict23 "__containerdict__"))
             (set-field! self22 "__containerdict__" tmpdict23))))))))
   (dict-set!
    gbl-dict
    set
    (dict
     ("__base__" (list object))
     ("__mro__" (list set object))
     ("__init__"
      (lambda (self24 tmpdict25)
        (call/ec
         (lambda (return)
           (if (py-list? tmpdict25)
             (set-field!
              self24
              "__containerdict__"
              (dict-ref tmpdict25 "__containerdict__"))
             (set-field! self24 "__containerdict__" tmpdict25))))))))
   (dict-set!
    gbl-dict
    tuple
    (dict
     ("__base__" (list object))
     ("__mro__" (list tuple object))
     ("__init__"
      (lambda (self26 tmp-dict27)
        (call/ec
         (lambda (return)
           (if (let ((t11 (py-list? tmp-dict27)))
                 (begin
                   (if t11
                     t11
                     (let ((t12 (tuple? tmp-dict27)))
                       (begin (if t12 t12 (set? tmp-dict27)))))))
             (set-field!
              self26
              "__containerdict__"
              (dict-ref tmp-dict27 "__containerdict__"))
             (set-field! self26 "__containerdict__" tmp-dict27))))))))
   (set! g$foo
     (lambda ()
       (call/ec
        (lambda (return) (begin (return (dict ("a" "hi") ("b" 2) ("c" 3))))))))
   (set! g$b
     (let ((e11 (g$foo)))
       (begin
         (let ((i12 "a"))
           (begin
             (if (py-list? e11)
               (py-list-ref e11 i12)
               (if (tuple? e11)
                 (tuple-ref e11 i12)
                 (if (dict? e11)
                   (dict-ref e11 i12)
                   (error "cannot index object")))))))))
   (py-print g$b)))
