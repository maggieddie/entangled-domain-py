(program
 (define gbl-dict (void))
 (define object (void))
 (define List (void))
 (define set (void))
 (define tuple (void))
 (define lst (void))
 (set-global! object (lambda () (void)))
 (set-global!
  List
  (lambda (tmp-dict16)
    (call/ec
     (lambda (return)
       (let (($localo17
              (dict
               ("__class__" (get-global List))
               ("__type__" "instPyList"))))
         ((get-field $localo17 "__init__") tmp-dict16)
         (return $localo17))))))
 (set-global!
  set
  (lambda (tmp-dict19)
    (call/ec
     (lambda (return)
       (let (($localo20
              (dict ("__class__" (get-global set)) ("__type__" "instSet"))))
         ((get-field $localo20 "__init__") tmp-dict19)
         (return $localo20))))))
 (set-global!
  tuple
  (lambda (tmp-dict22)
    (call/ec
     (lambda (return)
       (let (($localo23
              (dict
               ("__class__" (get-global tuple))
               ("__type__" "instTuple"))))
         ((get-field $localo23 "__init__") tmp-dict22)
         (return $localo23))))))
 (set-global! gbl-dict (dict))
 (dict-set!
  gbl-dict
  object
  (dict
   ("__base__" (list))
   ("__mro__" (list object))
   ("__init__" (lambda v void))))
 (dict-set!
  gbl-dict
  List
  (dict
   ("__base__" (list object))
   ("__mro__" (list List object))
   ("__init__"
    (lambda (self24 tmpdict25)
      (call/ec
       (lambda (return)
         (if (py-list? tmpdict25)
           (set-field!
            self24
            "__containerdict__"
            (dict-ref tmpdict25 "__containerdict__"))
           (set-field! self24 "__containerdict__" tmpdict25))))))))
 (dict-set!
  gbl-dict
  set
  (dict
   ("__base__" (list object))
   ("__mro__" (list set object))
   ("__init__"
    (lambda (self26 tmpdict27)
      (call/ec
       (lambda (return)
         (if (py-list? tmpdict27)
           (set-field!
            self26
            "__containerdict__"
            (dict-ref tmpdict27 "__containerdict__"))
           (set-field! self26 "__containerdict__" tmpdict27))))))))
 (dict-set!
  gbl-dict
  tuple
  (dict
   ("__base__" (list object))
   ("__mro__" (list tuple object))
   ("__init__"
    (lambda (self28 tmp-dict29)
      (call/ec
       (lambda (return)
         (if (or (py-list? tmp-dict29) (tuple? tmp-dict29) (set? tmp-dict29))
           (set-field!
            self28
            "__containerdict__"
            (dict-ref tmp-dict29 "__containerdict__"))
           (set-field! self28 "__containerdict__" tmp-dict29))))))))
 (set-global!
  lst
  ((get-global List)
   (dict (0 ((get-global List) (dict (0 "a") (1 "b")))) (1 2) (2 3))))
 (py-print
  (let ((e11 (get-global lst)))
    (let ((i12 1))
      (cond
       ((py-list? e11) (py-list-ref e11 i12))
       ((tuple? e11) (tuple-ref e11 i12))
       ((dict? e11) (dict-ref e11 i12))
       (else (error "cannot index object"))))))
 (py-print
  (let ((e13 (get-global lst)))
    (let ((i14 0))
      (cond
       ((py-list? e13) (py-list-ref e13 i14))
       ((tuple? e13) (tuple-ref e13 i14))
       ((dict? e13) (dict-ref e13 i14))
       (else (error "cannot index object")))))))
