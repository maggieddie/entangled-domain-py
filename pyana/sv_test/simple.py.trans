(program
 (define gbl-dict (void))
 (define object (void))
 (define List (void))
 (define set (void))
 (define tuple (void))
 (define len (void))
 (define simple_arr_set (void))
 (define lst (void))
 (set-global!
  len
  (lambda (seq13)
    (call/ec
     (lambda (return)
       (let ((cnt14 0))
         (cond
          ((or (py-list? seq13) (set? seq13) (tuple? seq13))
           (let ((container15 (dict-ref seq13 "__containerdict__")))
             (for-each entry16 container15 (set! cnt14 (+ 1 cnt14)))
             (return cnt14)))
          (else
           (for-each entry16 seq13 (set! cnt14 (+ cnt14 1)))
           (return cnt14))))))))
 (set-global! object (lambda () (void)))
 (set-global!
  List
  (lambda (tmp-dict18)
    (call/ec
     (lambda (return)
       (let (($localo19
              (dict
               ("__class__" (get-global List))
               ("__type__" "instPyList"))))
         ((get-field $localo19 "__init__") tmp-dict18)
         (return $localo19))))))
 (set-global!
  set
  (lambda (tmp-dict21)
    (call/ec
     (lambda (return)
       (let (($localo22
              (dict ("__class__" (get-global set)) ("__type__" "instSet"))))
         ((get-field $localo22 "__init__") tmp-dict21)
         (return $localo22))))))
 (set-global!
  tuple
  (lambda (tmp-dict24)
    (call/ec
     (lambda (return)
       (let (($localo25
              (dict
               ("__class__" (get-global tuple))
               ("__type__" "instTuple"))))
         ((get-field $localo25 "__init__") tmp-dict24)
         (return $localo25))))))
 (set-global! gbl-dict (dict))
 (dict-set!
  gbl-dict
  object
  (dict
   ("__base__" (list))
   ("__mro__" (list object))
   ("__init__" (lambda v void))))
 (dict-set!
  gbl-dict
  List
  (dict
   ("__base__" (list object))
   ("__mro__" (list List object))
   ("__init__"
    (lambda (self26 tmpdict27)
      (call/ec
       (lambda (return)
         (if (py-list? tmpdict27)
           (set-field!
            self26
            "__containerdict__"
            (dict-ref tmpdict27 "__containerdict__"))
           (set-field! self26 "__containerdict__" tmpdict27))))))
   ("append"
    (lambda (self28 elem29)
      (let ((max30 (len self28)))
        (dict-set! (dict-ref self28 "__containerdict__") max30 elem29))))))
 (dict-set!
  gbl-dict
  set
  (dict
   ("__base__" (list object))
   ("__mro__" (list set object))
   ("__init__"
    (lambda (self31 tmpdict32)
      (call/ec
       (lambda (return)
         (if (py-list? tmpdict32)
           (set-field!
            self31
            "__containerdict__"
            (dict-ref tmpdict32 "__containerdict__"))
           (set-field! self31 "__containerdict__" tmpdict32))))))))
 (dict-set!
  gbl-dict
  tuple
  (dict
   ("__base__" (list object))
   ("__mro__" (list tuple object))
   ("__init__"
    (lambda (self33 tmp-dict34)
      (call/ec
       (lambda (return)
         (if (or (py-list? tmp-dict34) (tuple? tmp-dict34) (set? tmp-dict34))
           (set-field!
            self33
            "__containerdict__"
            (dict-ref tmp-dict34 "__containerdict__"))
           (set-field! self33 "__containerdict__" tmp-dict34))))))))
 (set-global! lst ((get-global List) (dict (0 1) (1 2) (2 3))))
 (set-global!
  simple_arr_set
  (lambda (x)
    (call/ec
     (lambda (return)
       (let ()
         (cond
          ((< x (len (get-global lst)))
           (let ()
             (let ((b11 (get-global lst)))
               (let ((i12 x))
                 (cond
                  ((py-list? b11) (py-list-set! b11 i12 100))
                  ((dict? b11) (dict-set! b11 i12 100)))))
             (return 100)))
          (else (let () (return (- 1))))))))))
 ((get-global simple_arr_set) 10)
 (py-print (get-global lst)))
